extern "C" __global__ void fused_nn_conv2d_add_nn_relu_15_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[924];
  __shared__ float placeholder_shared[7];
  float PaddedInput_shared_local[98];
  float placeholder_shared_local[7];
  float DepthwiseConv2d[14];
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 33; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + ((int)threadIdx.x)))] = (((3 <= ((((int)blockIdx.y) * 28) + ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer)) && (((((int)blockIdx.y) * 28) + ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) < 227)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) - 336))] : 0.000000e+00f);
  }
  if (((int)threadIdx.x) < 7) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 7) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  for (int ax2 = 0; ax2 < 7; ++ax2) {
    PaddedInput_shared_local[(ax2)] = PaddedInput_shared[(((ax2 * 28) + ((int)threadIdx.x)))];
    PaddedInput_shared_local[((ax2 + 7))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 56))];
    PaddedInput_shared_local[((ax2 + 14))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 112))];
    PaddedInput_shared_local[((ax2 + 21))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 168))];
    PaddedInput_shared_local[((ax2 + 28))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 224))];
    PaddedInput_shared_local[((ax2 + 35))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 280))];
    PaddedInput_shared_local[((ax2 + 42))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 336))];
    PaddedInput_shared_local[((ax2 + 49))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 392))];
    PaddedInput_shared_local[((ax2 + 56))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 448))];
    PaddedInput_shared_local[((ax2 + 63))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 504))];
    PaddedInput_shared_local[((ax2 + 70))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 560))];
    PaddedInput_shared_local[((ax2 + 77))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 616))];
    PaddedInput_shared_local[((ax2 + 84))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 672))];
    PaddedInput_shared_local[((ax2 + 91))] = PaddedInput_shared[((((ax2 * 28) + ((int)threadIdx.x)) + 728))];
  }
  for (int ax21 = 0; ax21 < 7; ++ax21) {
    placeholder_shared_local[(ax21)] = placeholder_shared[(ax21)];
  }
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  DepthwiseConv2d[(7)] = 0.000000e+00f;
  DepthwiseConv2d[(8)] = 0.000000e+00f;
  DepthwiseConv2d[(9)] = 0.000000e+00f;
  DepthwiseConv2d[(10)] = 0.000000e+00f;
  DepthwiseConv2d[(11)] = 0.000000e+00f;
  DepthwiseConv2d[(12)] = 0.000000e+00f;
  DepthwiseConv2d[(13)] = 0.000000e+00f;
  for (int di = 0; di < 7; ++di) {
    DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(di)] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[((di + 7))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[((di + 14))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[((di + 21))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[((di + 28))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[((di + 35))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[((di + 42))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[((di + 49))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[((di + 56))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[((di + 63))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[((di + 70))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[((di + 77))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[((di + 84))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[((di + 91))] * placeholder_shared_local[(di)]));
  }
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 112))] = max((DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 224))] = max((DepthwiseConv2d[(2)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 336))] = max((DepthwiseConv2d[(3)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 448))] = max((DepthwiseConv2d[(4)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 560))] = max((DepthwiseConv2d[(5)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 672))] = max((DepthwiseConv2d[(6)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 784))] = max((DepthwiseConv2d[(7)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 896))] = max((DepthwiseConv2d[(8)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 1008))] = max((DepthwiseConv2d[(9)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 1120))] = max((DepthwiseConv2d[(10)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 1232))] = max((DepthwiseConv2d[(11)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 1344))] = max((DepthwiseConv2d[(12)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 1456))] = max((DepthwiseConv2d[(13)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_5_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[8];
  __shared__ float pad_temp_shared[448];
  __shared__ float placeholder_shared[1024];
  for (int yy_init = 0; yy_init < 2; ++yy_init) {
    compute[(yy_init)] = 0.000000e+00f;
    compute[((yy_init + 2))] = 0.000000e+00f;
    compute[((yy_init + 4))] = 0.000000e+00f;
    compute[((yy_init + 6))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 64) {
        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 1024) {
          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      for (int yy = 0; yy < 2; ++yy) {
        compute[(yy)] = (compute[(yy)] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
        compute[((yy + 2))] = (compute[((yy + 2))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
        compute[((yy + 4))] = (compute[((yy + 4))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
        compute[((yy + 6))] = (compute[((yy + 6))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      }
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)))] = max((compute[(ax2_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 3136))] = max((compute[((ax2_inner_inner_inner + 2))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 6272))] = max((compute[((ax2_inner_inner_inner + 4))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 9408))] = max((compute[((ax2_inner_inner_inner + 6))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_4_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[224];
  __shared__ float placeholder_shared[3];
  float PaddedInput_shared_local[21];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[7];
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)))] = (((1 <= ((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.y))) && (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.y)) < 15)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 196) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28)) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) - 14))] : 0.000000e+00f);
  }
  if (((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) < 3) {
    if (((int)threadIdx.y) < 1) {
      placeholder_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)))] = ((float*)placeholder1)[((((((int)threadIdx.y) * 14) + (((int)blockIdx.z) * 3)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  for (int ax2 = 0; ax2 < 3; ++ax2) {
    PaddedInput_shared_local[(ax2)] = PaddedInput_shared[((((ax2 * 14) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)))];
    PaddedInput_shared_local[((ax2 + 3))] = PaddedInput_shared[(((((ax2 * 14) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 28))];
    PaddedInput_shared_local[((ax2 + 6))] = PaddedInput_shared[(((((ax2 * 14) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 56))];
    PaddedInput_shared_local[((ax2 + 9))] = PaddedInput_shared[(((((ax2 * 14) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 84))];
    PaddedInput_shared_local[((ax2 + 12))] = PaddedInput_shared[(((((ax2 * 14) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 112))];
    PaddedInput_shared_local[((ax2 + 15))] = PaddedInput_shared[(((((ax2 * 14) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 140))];
    PaddedInput_shared_local[((ax2 + 18))] = PaddedInput_shared[(((((ax2 * 14) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 168))];
  }
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    placeholder_shared_local[(ax21)] = placeholder_shared[(ax21)];
  }
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  for (int di = 0; di < 3; ++di) {
    DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(di)] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[((di + 3))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[((di + 6))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[((di + 9))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[((di + 12))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[((di + 15))] * placeholder_shared_local[(di)]));
    DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[((di + 18))] * placeholder_shared_local[(di)]));
  }
  ((float*)T_relu)[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 28))] = max((DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 56))] = max((DepthwiseConv2d[(2)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 84))] = max((DepthwiseConv2d[(3)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 112))] = max((DepthwiseConv2d[(4)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 140))] = max((DepthwiseConv2d[(5)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 168))] = max((DepthwiseConv2d[(6)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_17_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[4];
  __shared__ float pad_temp_shared[448];
  __shared__ float placeholder_shared[4];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  #pragma unroll
  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 224) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((rc_outer * 50176) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.z) * 224)) + ((int)threadIdx.x)))];
    if (((((int)threadIdx.z) * 2) + ((int)threadIdx.x)) < 4) {
      if (((int)threadIdx.x) < 2) {
        placeholder_shared[(((((int)threadIdx.z) * 2) + ((int)threadIdx.x)))] = ((float*)placeholder1)[(((((((int)blockIdx.z) * 12) + (((int)threadIdx.z) * 6)) + (((int)threadIdx.x) * 3)) + rc_outer))];
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((int)threadIdx.z))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((int)threadIdx.z))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[((((int)threadIdx.z) + 2))]));
  }
  ((float*)T_add)[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 4) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 100352))] = (compute[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 4) + ((int)threadIdx.z)) + 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 224))] = (compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 4) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 100576))] = (compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 4) + ((int)threadIdx.z)) + 2))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_6_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[420];
  __shared__ float placeholder_shared[6];
  float PaddedInput_shared_local[15];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[7];
  PaddedInput_shared[(((((int)threadIdx.z) * 14) + ((int)threadIdx.x)))] = ((1 <= ((((int)blockIdx.y) * 14) + ((int)threadIdx.z))) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.z) * 14)) + ((int)threadIdx.x)) - 14))] : 0.000000e+00f);
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 28))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.z) * 14)) + ((int)threadIdx.x)) + 14))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 56))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.z) * 14)) + ((int)threadIdx.x)) + 42))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 84))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.z) * 14)) + ((int)threadIdx.x)) + 70))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 112))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.z) * 14)) + ((int)threadIdx.x)) + 98))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 140))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.z) * 14)) + ((int)threadIdx.x)) + 126))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 168))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.z) * 14)) + ((int)threadIdx.x)) + 154))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 196))] = ((1 <= ((((int)blockIdx.y) * 14) + ((((int)threadIdx.z) + 14) % 15))) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 14) / 15) * 392)) + (((int)blockIdx.y) * 196)) + (((((int)threadIdx.z) + 14) % 15) * 14)) + ((int)threadIdx.x)) - 14))] : 0.000000e+00f);
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 224))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 16) / 15) * 392)) + (((int)blockIdx.y) * 196)) + ((((int)threadIdx.z) + 1) * 14)) + ((int)threadIdx.x)) - 14))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 252))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 18) / 15) * 392)) + (((int)blockIdx.y) * 196)) + ((((int)threadIdx.z) + 3) * 14)) + ((int)threadIdx.x)) - 14))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 280))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 20) / 15) * 392)) + (((int)blockIdx.y) * 196)) + ((((int)threadIdx.z) + 5) * 14)) + ((int)threadIdx.x)) - 14))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 308))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 22) / 15) * 392)) + (((int)blockIdx.y) * 196)) + ((((int)threadIdx.z) + 7) * 14)) + ((int)threadIdx.x)) - 14))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 336))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 24) / 15) * 392)) + (((int)blockIdx.y) * 196)) + ((((int)threadIdx.z) + 9) * 14)) + ((int)threadIdx.x)) - 14))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 364))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 26) / 15) * 392)) + (((int)blockIdx.y) * 196)) + ((((int)threadIdx.z) + 11) * 14)) + ((int)threadIdx.x)) - 14))];
  PaddedInput_shared[((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) + 392))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 784) + (((((int)threadIdx.z) + 28) / 15) * 392)) + (((int)blockIdx.y) * 196)) + ((((int)threadIdx.z) + 13) * 14)) + ((int)threadIdx.x)) - 14))];
  if (((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) < 6) {
    if (((int)threadIdx.z) < 1) {
      placeholder_shared[(((((int)threadIdx.z) * 14) + ((int)threadIdx.x)))] = ((float*)placeholder1)[((((((int)threadIdx.z) * 14) + (((int)blockIdx.z) * 6)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((int)threadIdx.z) * 210) + ((int)threadIdx.x)))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 14))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 28))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 42))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 56))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 70))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 84))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 98))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 112))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 126))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 140))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 154))];
  PaddedInput_shared_local[(12)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 168))];
  PaddedInput_shared_local[(13)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 182))];
  PaddedInput_shared_local[(14)] = PaddedInput_shared[((((((int)threadIdx.z) * 210) + ((int)threadIdx.x)) + 196))];
  placeholder_shared_local[(0)] = placeholder_shared[((((int)threadIdx.z) * 3))];
  placeholder_shared_local[(1)] = placeholder_shared[(((((int)threadIdx.z) * 3) + 1))];
  placeholder_shared_local[(2)] = placeholder_shared[(((((int)threadIdx.z) * 3) + 2))];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(12)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(12)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(13)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(14)] * placeholder_shared_local[(2)]));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 14))] = max((DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 28))] = max((DepthwiseConv2d[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 42))] = max((DepthwiseConv2d[(3)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 56))] = max((DepthwiseConv2d[(4)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 70))] = max((DepthwiseConv2d[(5)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 84))] = max((DepthwiseConv2d[(6)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_add_nn_relu_3_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2, void* __restrict__ placeholder3) {
  float compute[128];
  __shared__ float pad_temp_shared[896];
  __shared__ float placeholder_shared[256];
  #pragma unroll
  for (int ff_init = 0; ff_init < 16; ++ff_init) {
    #pragma unroll
    for (int yy_init = 0; yy_init < 2; ++yy_init) {
      compute[(((ff_init * 2) + yy_init))] = 0.000000e+00f;
      compute[((((ff_init * 2) + yy_init) + 64))] = 0.000000e+00f;
      compute[((((ff_init * 2) + yy_init) + 32))] = 0.000000e+00f;
      compute[((((ff_init * 2) + yy_init) + 96))] = 0.000000e+00f;
    }
  }
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 224)) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2)) < 64) {
        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 256) {
          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2) * 64)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 3)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 16; ++ff) {
        #pragma unroll
        for (int yy = 0; yy < 2; ++yy) {
          compute[(((ff * 2) + yy))] = (compute[(((ff * 2) + yy))] + (pad_temp_shared[((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
          compute[((((ff * 2) + yy) + 64))] = (compute[((((ff * 2) + yy) + 64))] + (pad_temp_shared[(((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)) + 112))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
          compute[((((ff * 2) + yy) + 32))] = (compute[((((ff * 2) + yy) + 32))] + (pad_temp_shared[(((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
          compute[((((ff * 2) + yy) + 96))] = (compute[((((ff * 2) + yy) + 96))] + (pad_temp_shared[(((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)) + 140))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 16; ++ax1_inner_inner_inner) {
    #pragma unroll
    for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
      ((float*)T_relu)[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)))] = max(((compute[(((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]) + ((float*)placeholder3)[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)))]), 0.000000e+00f);
      ((float*)T_relu)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 112))] = max(((compute[((((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner) + 64))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]) + ((float*)placeholder3)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 112))]), 0.000000e+00f);
      ((float*)T_relu)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 28))] = max(((compute[((((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner) + 32))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]) + ((float*)placeholder3)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 28))]), 0.000000e+00f);
      ((float*)T_relu)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 140))] = max(((compute[((((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner) + 96))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]) + ((float*)placeholder3)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 140))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_12_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[896];
  __shared__ float placeholder_shared[3];
  float PaddedInput_shared_local[16];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[14];
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 16; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 56) + ((int)threadIdx.x)))] = (((1 <= ((((int)blockIdx.y) * 14) + ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer)) && (((((int)blockIdx.y) * 14) + ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 56)) + ((int)threadIdx.x)) - 56))] : 0.000000e+00f);
  }
  if (((int)threadIdx.x) < 3) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 3) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  for (int ax2 = 0; ax2 < 16; ++ax2) {
    PaddedInput_shared_local[(ax2)] = PaddedInput_shared[(((ax2 * 56) + ((int)threadIdx.x)))];
  }
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    placeholder_shared_local[(ax21)] = placeholder_shared[(ax21)];
  }
  for (int i = 0; i < 14; ++i) {
    DepthwiseConv2d[(i)] = 0.000000e+00f;
    for (int di = 0; di < 3; ++di) {
      DepthwiseConv2d[(i)] = (DepthwiseConv2d[(i)] + (PaddedInput_shared_local[((i + di))] * placeholder_shared_local[(di)]));
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 14; ++ax2_inner_inner_inner) {
    ((float*)T_relu)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(ax2_inner_inner_inner)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_10_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[504];
  __shared__ float placeholder_shared[6];
  float PaddedInput_shared_local[18];
  float placeholder_shared_local[6];
  float DepthwiseConv2d[8];
  PaddedInput_shared[(((int)threadIdx.x))] = ((1 <= ((int)blockIdx.y)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) - 28))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 28))] = ((float*)placeholder)[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 56))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 28))];
  PaddedInput_shared[((((int)threadIdx.x) + 84))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 56))];
  PaddedInput_shared[((((int)threadIdx.x) + 112))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 84))];
  PaddedInput_shared[((((int)threadIdx.x) + 140))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 112))];
  PaddedInput_shared[((((int)threadIdx.x) + 168))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 140))];
  PaddedInput_shared[((((int)threadIdx.x) + 196))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 168))];
  PaddedInput_shared[((((int)threadIdx.x) + 224))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 196))];
  PaddedInput_shared[((((int)threadIdx.x) + 252))] = ((1 <= ((int)blockIdx.y)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1540))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 280))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1568))];
  PaddedInput_shared[((((int)threadIdx.x) + 308))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1596))];
  PaddedInput_shared[((((int)threadIdx.x) + 336))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1624))];
  PaddedInput_shared[((((int)threadIdx.x) + 364))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1652))];
  PaddedInput_shared[((((int)threadIdx.x) + 392))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1680))];
  PaddedInput_shared[((((int)threadIdx.x) + 420))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1708))];
  PaddedInput_shared[((((int)threadIdx.x) + 448))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1736))];
  PaddedInput_shared[((((int)threadIdx.x) + 476))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 1764))];
  if (((int)threadIdx.x) < 6) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 6) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[(((int)threadIdx.x))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[((((int)threadIdx.x) + 252))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[((((int)threadIdx.x) + 28))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[((((int)threadIdx.x) + 280))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[((((int)threadIdx.x) + 56))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[((((int)threadIdx.x) + 308))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[((((int)threadIdx.x) + 84))];
  PaddedInput_shared_local[(12)] = PaddedInput_shared[((((int)threadIdx.x) + 336))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[((((int)threadIdx.x) + 112))];
  PaddedInput_shared_local[(13)] = PaddedInput_shared[((((int)threadIdx.x) + 364))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[((((int)threadIdx.x) + 140))];
  PaddedInput_shared_local[(14)] = PaddedInput_shared[((((int)threadIdx.x) + 392))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[((((int)threadIdx.x) + 168))];
  PaddedInput_shared_local[(15)] = PaddedInput_shared[((((int)threadIdx.x) + 420))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[((((int)threadIdx.x) + 196))];
  PaddedInput_shared_local[(16)] = PaddedInput_shared[((((int)threadIdx.x) + 448))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[((((int)threadIdx.x) + 224))];
  PaddedInput_shared_local[(17)] = PaddedInput_shared[((((int)threadIdx.x) + 476))];
  placeholder_shared_local[(0)] = placeholder_shared[(0)];
  placeholder_shared_local[(3)] = placeholder_shared[(3)];
  placeholder_shared_local[(1)] = placeholder_shared[(1)];
  placeholder_shared_local[(4)] = placeholder_shared[(4)];
  placeholder_shared_local[(2)] = placeholder_shared[(2)];
  placeholder_shared_local[(5)] = placeholder_shared[(5)];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(12)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(13)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(13)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(14)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(15)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(7)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(15)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(16)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(17)] * placeholder_shared_local[(5)]));
  ((float*)T_relu)[((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(0)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 784))] = max((DepthwiseConv2d[(4)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 28))] = max((DepthwiseConv2d[(1)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 812))] = max((DepthwiseConv2d[(5)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))] = max((DepthwiseConv2d[(2)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 840))] = max((DepthwiseConv2d[(6)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 84))] = max((DepthwiseConv2d[(3)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 868))] = max((DepthwiseConv2d[(7)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_add_nn_relu_1_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2, void* __restrict__ placeholder3) {
  float compute[56];
  __shared__ float pad_temp_shared[784];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(35)] = 0.000000e+00f;
  compute[(42)] = 0.000000e+00f;
  compute[(49)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(36)] = 0.000000e+00f;
  compute[(43)] = 0.000000e+00f;
  compute[(50)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(37)] = 0.000000e+00f;
  compute[(44)] = 0.000000e+00f;
  compute[(51)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  compute[(38)] = 0.000000e+00f;
  compute[(45)] = 0.000000e+00f;
  compute[(52)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(32)] = 0.000000e+00f;
  compute[(39)] = 0.000000e+00f;
  compute[(46)] = 0.000000e+00f;
  compute[(53)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(33)] = 0.000000e+00f;
  compute[(40)] = 0.000000e+00f;
  compute[(47)] = 0.000000e+00f;
  compute[(54)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(34)] = 0.000000e+00f;
  compute[(41)] = 0.000000e+00f;
  compute[(48)] = 0.000000e+00f;
  compute[(55)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 7)))] = ((float*)placeholder)[(((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + (((int)threadIdx.x) * 7)))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 7)) + 1))] = ((float*)placeholder)[((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + (((int)threadIdx.x) * 7)) + 1))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 7)) + 2))] = ((float*)placeholder)[((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + (((int)threadIdx.x) * 7)) + 2))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 7)) + 3))] = ((float*)placeholder)[((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + (((int)threadIdx.x) * 7)) + 3))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 7)) + 4))] = ((float*)placeholder)[((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + (((int)threadIdx.x) * 7)) + 4))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 7)) + 5))] = ((float*)placeholder)[((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + (((int)threadIdx.x) * 7)) + 5))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 7)) + 6))] = ((float*)placeholder)[((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + (((int)threadIdx.x) * 7)) + 6))];
    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 8)) < 64) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 512) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 5) / 8) * 256)) + (rc_outer * 8)) + ((((int)threadIdx.x) * 5) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 1) >> 3)) < 64) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 511) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 1) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 3)) < 64) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 510) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 2))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 2) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 2) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 3)) < 64) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 509) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 3))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 3) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 3) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 4) >> 3)) < 64) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 508) {
        if (((int)threadIdx.x) < 12) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 4))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 4) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 4) & 7)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
  }
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)))] = max(((compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1568))] = max(((compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1568))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3136))] = max(((compute[(14)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3136))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4704))] = max(((compute[(21)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4704))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6272))] = max(((compute[(28)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6272))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7840))] = max(((compute[(35)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7840))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9408))] = max(((compute[(42)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9408))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 10976))] = max(((compute[(49)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 10976))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 14))] = max(((compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 14))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1582))] = max(((compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1582))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3150))] = max(((compute[(15)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3150))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4718))] = max(((compute[(22)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4718))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6286))] = max(((compute[(29)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6286))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7854))] = max(((compute[(36)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7854))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9422))] = max(((compute[(43)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9422))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 10990))] = max(((compute[(50)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 10990))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 28))] = max(((compute[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 28))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1596))] = max(((compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1596))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3164))] = max(((compute[(16)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3164))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4732))] = max(((compute[(23)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4732))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6300))] = max(((compute[(30)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6300))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7868))] = max(((compute[(37)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7868))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9436))] = max(((compute[(44)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9436))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11004))] = max(((compute[(51)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11004))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 42))] = max(((compute[(3)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 42))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1610))] = max(((compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1610))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3178))] = max(((compute[(17)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3178))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4746))] = max(((compute[(24)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4746))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6314))] = max(((compute[(31)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6314))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7882))] = max(((compute[(38)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7882))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9450))] = max(((compute[(45)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9450))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11018))] = max(((compute[(52)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11018))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 56))] = max(((compute[(4)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 56))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1624))] = max(((compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1624))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3192))] = max(((compute[(18)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3192))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4760))] = max(((compute[(25)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4760))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6328))] = max(((compute[(32)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6328))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7896))] = max(((compute[(39)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7896))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9464))] = max(((compute[(46)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9464))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11032))] = max(((compute[(53)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11032))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 70))] = max(((compute[(5)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 70))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1638))] = max(((compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1638))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3206))] = max(((compute[(19)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3206))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4774))] = max(((compute[(26)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4774))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6342))] = max(((compute[(33)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6342))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7910))] = max(((compute[(40)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7910))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9478))] = max(((compute[(47)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9478))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11046))] = max(((compute[(54)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11046))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 84))] = max(((compute[(6)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 84))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1652))] = max(((compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1652))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3220))] = max(((compute[(20)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3220))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4788))] = max(((compute[(27)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4788))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6356))] = max(((compute[(34)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 6356))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7924))] = max(((compute[(41)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 7924))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9492))] = max(((compute[(48)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 9492))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11060))] = max(((compute[(55)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 11060))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_8_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[448];
  __shared__ float placeholder_shared[3];
  float PaddedInput_shared_local[16];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[14];
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 16; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + ((int)threadIdx.x)))] = (((1 <= ((((int)blockIdx.y) * 14) + ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer)) && (((((int)blockIdx.y) * 14) + ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) < 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 392)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28)) + ((int)threadIdx.x)) - 28))] : 0.000000e+00f);
  }
  if (((int)threadIdx.x) < 3) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 3) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  for (int ax2 = 0; ax2 < 16; ++ax2) {
    PaddedInput_shared_local[(ax2)] = PaddedInput_shared[(((ax2 * 28) + ((int)threadIdx.x)))];
  }
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    placeholder_shared_local[(ax21)] = placeholder_shared[(ax21)];
  }
  for (int i = 0; i < 14; ++i) {
    DepthwiseConv2d[(i)] = 0.000000e+00f;
    for (int di = 0; di < 3; ++di) {
      DepthwiseConv2d[(i)] = (DepthwiseConv2d[(i)] + (PaddedInput_shared_local[((i + di))] * placeholder_shared_local[(di)]));
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 14; ++ax2_inner_inner_inner) {
    ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 392)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(ax2_inner_inner_inner)] + ((float*)placeholder2)[(((int)blockIdx.z))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_3_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[448];
  __shared__ float placeholder_shared[2048];
  #pragma unroll
  for (int yy_init = 0; yy_init < 2; ++yy_init) {
    compute[(yy_init)] = 0.000000e+00f;
    compute[((yy_init + 2))] = 0.000000e+00f;
    compute[((yy_init + 4))] = 0.000000e+00f;
    compute[((yy_init + 6))] = 0.000000e+00f;
    compute[((yy_init + 8))] = 0.000000e+00f;
    compute[((yy_init + 10))] = 0.000000e+00f;
    compute[((yy_init + 12))] = 0.000000e+00f;
    compute[((yy_init + 14))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 10; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 128) {
        if ((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 2048) {
          if (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {
            placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 8192)) + ((((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      #pragma unroll
      for (int yy = 0; yy < 2; ++yy) {
        compute[(yy)] = (compute[(yy)] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
        compute[((yy + 2))] = (compute[((yy + 2))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
        compute[((yy + 4))] = (compute[((yy + 4))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
        compute[((yy + 6))] = (compute[((yy + 6))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
        compute[((yy + 8))] = (compute[((yy + 8))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
        compute[((yy + 10))] = (compute[((yy + 10))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
        compute[((yy + 12))] = (compute[((yy + 12))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
        compute[((yy + 14))] = (compute[((yy + 14))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    ((float*)T_relu)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)))] = max((compute[(ax2_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + ((int)threadIdx.z)))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 3136))] = max((compute[((ax2_inner_inner_inner + 2))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 6272))] = max((compute[((ax2_inner_inner_inner + 4))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 9408))] = max((compute[((ax2_inner_inner_inner + 6))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 12544))] = max((compute[((ax2_inner_inner_inner + 8))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 64))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 15680))] = max((compute[((ax2_inner_inner_inner + 10))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 80))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 18816))] = max((compute[((ax2_inner_inner_inner + 12))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 96))]), 0.000000e+00f);
    ((float*)T_relu)[(((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 21952))] = max((compute[((ax2_inner_inner_inner + 14))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 112))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_5_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[448];
  __shared__ float placeholder_shared[2048];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)))] = ((float*)placeholder)[(((((rc_outer * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)))];
    pad_temp_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + 1))] = ((float*)placeholder)[((((((rc_outer * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + 1))];
    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 10) / 16)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2048) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + (((((int)threadIdx.x) * 10) / 16) * 512)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 10) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 1) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2047) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 1) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 1) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 2) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2046) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 2))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 2) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 2) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 3) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2045) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 3))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 3) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 3) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 4) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2044) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 4))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 4) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 4) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 5) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2043) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 5))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 5) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 5) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 6) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2042) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 6))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 6) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 6) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 7) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2041) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 7))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 7) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 7) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 8) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2040) {
        if (((int)threadIdx.x) < 12) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 8))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 8) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 8) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + 9) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) < 2039) {
        if (((int)threadIdx.x) < 12) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + 9))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + 9) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + 9) & 15)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1280))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1792))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1280))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1792))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1281))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1793))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1281))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1793))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1282))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1794))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1282))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1794))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1283))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1795))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1283))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1795))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1284))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1796))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1284))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1796))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1285))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1797))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1285))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1797))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1286))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1798))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1286))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1798))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1287))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1799))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1287))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1799))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1288))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1800))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1288))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1800))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1289))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1801))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1289))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1801))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1290))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1802))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1290))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1802))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1291))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1803))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1291))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1803))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1292))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1804))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1292))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1804))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1293))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1805))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1293))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1805))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1294))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1806))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1294))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1806))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1295))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1807))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1295))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1807))]));
  }
  ((float*)T_add)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 3136))] = (compute[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 16))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 6272))] = (compute[(4)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 9408))] = (compute[(6)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 48))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 12544))] = (compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 15680))] = (compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 80))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 18816))] = (compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 21952))] = (compute[(14)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 112))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14))] = (compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 3150))] = (compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 16))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 6286))] = (compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 9422))] = (compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 48))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 12558))] = (compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 15694))] = (compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 80))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 18830))] = (compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 21966))] = (compute[(15)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 112))]);
}

extern "C" __global__ void fused_nn_conv2d_add_13_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[1792];
  __shared__ float placeholder_shared[2048];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 128) {
        if ((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 2048) {
          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {
            placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 1024) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 128)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
    }
  }
  ((float*)T_add)[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((int)threadIdx.z))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50176))] = (compute[(4)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100352))] = (compute[(8)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150528))] = (compute[(12)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200704))] = (compute[(16)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250880))] = (compute[(20)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301056))] = (compute[(24)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351232))] = (compute[(28)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))] = (compute[(2)] + ((float*)placeholder2)[(((int)threadIdx.z))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50232))] = (compute[(6)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100408))] = (compute[(10)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150584))] = (compute[(14)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200760))] = (compute[(18)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250936))] = (compute[(22)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301112))] = (compute[(26)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351288))] = (compute[(30)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 28))] = (compute[(1)] + ((float*)placeholder2)[(((int)threadIdx.z))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50204))] = (compute[(5)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100380))] = (compute[(9)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150556))] = (compute[(13)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200732))] = (compute[(17)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250908))] = (compute[(21)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301084))] = (compute[(25)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351260))] = (compute[(29)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 84))] = (compute[(3)] + ((float*)placeholder2)[(((int)threadIdx.z))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50260))] = (compute[(7)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100436))] = (compute[(11)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150612))] = (compute[(15)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200788))] = (compute[(19)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250964))] = (compute[(23)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301140))] = (compute[(27)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351316))] = (compute[(31)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]);
}

extern "C" __global__ void fused_nn_conv2d_add_15_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[1792];
  __shared__ float placeholder_shared[1024];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  __syncthreads();
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 50176))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 50176))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 50176))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 50176))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)) + 16))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)) + 16))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)) + 16))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  __syncthreads();
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 100352))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 100352))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 100352))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 100352))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)) + 32))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)) + 32))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)) + 32))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  __syncthreads();
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 150528))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 150528))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 150528))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 150528))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)) + 48))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)) + 48))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)) + 48))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  ((float*)T_add)[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((int)threadIdx.z))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25088))] = (compute[(2)] + ((float*)placeholder2)[((((int)threadIdx.z) + 8))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50176))] = (compute[(4)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75264))] = (compute[(6)] + ((float*)placeholder2)[((((int)threadIdx.z) + 24))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100352))] = (compute[(8)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 125440))] = (compute[(10)] + ((float*)placeholder2)[((((int)threadIdx.z) + 40))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150528))] = (compute[(12)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 175616))] = (compute[(14)] + ((float*)placeholder2)[((((int)threadIdx.z) + 56))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))] = (compute[(1)] + ((float*)placeholder2)[(((int)threadIdx.z))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25144))] = (compute[(3)] + ((float*)placeholder2)[((((int)threadIdx.z) + 8))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50232))] = (compute[(5)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75320))] = (compute[(7)] + ((float*)placeholder2)[((((int)threadIdx.z) + 24))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100408))] = (compute[(9)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 125496))] = (compute[(11)] + ((float*)placeholder2)[((((int)threadIdx.z) + 40))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150584))] = (compute[(13)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]);
  ((float*)T_add)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 175672))] = (compute[(15)] + ((float*)placeholder2)[((((int)threadIdx.z) + 56))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_11_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[1792];
  __shared__ float placeholder_shared[2048];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 128) {
        if ((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 2048) {
          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {
            placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 2048) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((rc_inner * 112) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1280))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 112) + ((int)threadIdx.x)) + 84))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1792))]));
    }
  }
  ((float*)T_relu)[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))] = max((compute[(0)] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50176))] = max((compute[(4)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100352))] = max((compute[(8)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150528))] = max((compute[(12)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200704))] = max((compute[(16)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250880))] = max((compute[(20)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301056))] = max((compute[(24)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351232))] = max((compute[(28)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))] = max((compute[(2)] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50232))] = max((compute[(6)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100408))] = max((compute[(10)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150584))] = max((compute[(14)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200760))] = max((compute[(18)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250936))] = max((compute[(22)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301112))] = max((compute[(26)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351288))] = max((compute[(30)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 28))] = max((compute[(1)] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50204))] = max((compute[(5)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100380))] = max((compute[(9)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150556))] = max((compute[(13)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200732))] = max((compute[(17)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250908))] = max((compute[(21)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301084))] = max((compute[(25)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351260))] = max((compute[(29)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 84))] = max((compute[(3)] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50260))] = max((compute[(7)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100436))] = max((compute[(11)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150612))] = max((compute[(15)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 200788))] = max((compute[(19)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 250964))] = max((compute[(23)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 301140))] = max((compute[(27)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 351316))] = max((compute[(31)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_12_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[456];
  __shared__ float placeholder_shared[3];
  float PaddedInput_shared_local[24];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[8];
  PaddedInput_shared[(((int)threadIdx.x))] = ((1 <= ((int)threadIdx.x)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 28))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 27))];
  PaddedInput_shared[((((int)threadIdx.x) + 56))] = ((1 <= ((((int)threadIdx.x) + 56) % 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 56) / 57) * 56)) + ((((int)threadIdx.x) + 56) % 57)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 84))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 84) / 57) * 56)) + (((int)threadIdx.x) + 27)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 112))] = ((1 <= ((((int)threadIdx.x) + 55) % 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 112) / 57) * 56)) + ((((int)threadIdx.x) + 55) % 57)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 140))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 140) / 57) * 56)) + (((int)threadIdx.x) + 26)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 168))] = ((1 <= ((((int)threadIdx.x) + 54) % 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 168) / 57) * 56)) + ((((int)threadIdx.x) + 54) % 57)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 196))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 196) / 57) * 56)) + (((int)threadIdx.x) + 25)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 224))] = ((1 <= ((((int)threadIdx.x) + 53) % 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 224) / 57) * 56)) + ((((int)threadIdx.x) + 53) % 57)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 252))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 252) / 57) * 56)) + (((int)threadIdx.x) + 24)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 280))] = ((1 <= ((((int)threadIdx.x) + 52) % 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 280) / 57) * 56)) + ((((int)threadIdx.x) + 52) % 57)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 308))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 308) / 57) * 56)) + (((int)threadIdx.x) + 23)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 336))] = ((1 <= ((((int)threadIdx.x) + 51) % 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 336) / 57) * 56)) + ((((int)threadIdx.x) + 51) % 57)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 364))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 364) / 57) * 56)) + (((int)threadIdx.x) + 22)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 392))] = ((1 <= ((((int)threadIdx.x) + 50) % 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 392) / 57) * 56)) + ((((int)threadIdx.x) + 50) % 57)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 420))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 420) / 57) * 56)) + (((int)threadIdx.x) + 21)) - 1))];
  if (((int)threadIdx.x) < 8) {
    PaddedInput_shared[((((int)threadIdx.x) + 448))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 448) / 57) * 56)) + (((int)threadIdx.x) + 49)) - 1))];
  }
  if (((int)threadIdx.x) < 3) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 3) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[((((int)threadIdx.x) * 2))];
  PaddedInput_shared_local[(12)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 228))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 1))];
  PaddedInput_shared_local[(13)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 229))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 2))];
  PaddedInput_shared_local[(14)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 230))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 57))];
  PaddedInput_shared_local[(15)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 285))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 58))];
  PaddedInput_shared_local[(16)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 286))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 59))];
  PaddedInput_shared_local[(17)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 287))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 114))];
  PaddedInput_shared_local[(18)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 342))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 115))];
  PaddedInput_shared_local[(19)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 343))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 116))];
  PaddedInput_shared_local[(20)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 344))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 171))];
  PaddedInput_shared_local[(21)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 399))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 172))];
  PaddedInput_shared_local[(22)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 400))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 173))];
  PaddedInput_shared_local[(23)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 401))];
  placeholder_shared_local[(0)] = placeholder_shared[(0)];
  placeholder_shared_local[(1)] = placeholder_shared[(1)];
  placeholder_shared_local[(2)] = placeholder_shared[(2)];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(12)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(13)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(14)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(15)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(16)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(17)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(18)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(19)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(20)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(7)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(21)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(22)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(23)] * placeholder_shared_local[(2)]));
  ((float*)T_add)[((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)))] = (DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 112))] = (DepthwiseConv2d[(4)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 28))] = (DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 140))] = (DepthwiseConv2d[(5)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 56))] = (DepthwiseConv2d[(2)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 168))] = (DepthwiseConv2d[(6)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 84))] = (DepthwiseConv2d[(3)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 1568) + (((int)blockIdx.y) * 224)) + ((int)threadIdx.x)) + 196))] = (DepthwiseConv2d[(7)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
}

extern "C" __global__ void fused_nn_conv2d_add_add_nn_relu_2_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2, void* __restrict__ placeholder3) {
  float compute[32];
  __shared__ float pad_temp_shared[1792];
  __shared__ float placeholder_shared[2048];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[(((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.x) * 4)))];
    pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.x) * 4)) + 1))];
    pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.x) * 4)) + 2))];
    pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.x) * 4)) + 3))];
    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 16)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 2048) {
        if (((int)threadIdx.x) < 26) {
          placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((((int)threadIdx.x) * 5) / 16) * 128)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 5) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 1) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 2047) {
        if (((int)threadIdx.x) < 26) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 5) + 1) >> 4) * 128)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 1) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 2046) {
        if (((int)threadIdx.x) < 26) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 2))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 5) + 2) >> 4) * 128)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 2) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 2045) {
        if (((int)threadIdx.x) < 25) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 3))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 5) + 3) >> 4) * 128)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 3) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 4) >> 4)) < 128) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 2044) {
        if (((int)threadIdx.x) < 25) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 4))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 5) + 4) >> 4) * 128)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 4) & 15)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1280))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1792))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1280))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1792))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1280))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1792))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1280))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1792))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1281))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1793))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1281))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1793))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1281))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1793))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1281))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1793))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1282))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1794))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1282))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1794))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1282))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1794))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1282))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1794))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1283))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1795))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1283))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1795))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1283))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1795))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1283))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1795))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1284))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1796))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1284))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1796))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1284))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1796))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1284))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1796))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1285))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1797))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1285))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1797))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1285))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1797))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1285))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1797))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1286))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1798))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1286))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1798))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1286))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1798))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1286))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1798))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1287))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1799))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1287))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 812))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1799))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1287))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1799))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1287))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 868))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1799))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1288))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1800))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1288))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 924))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1800))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1288))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1800))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1288))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 980))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1800))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1289))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1801))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1289))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 1036))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1801))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1289))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1801))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1289))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1801))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1290))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1802))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1290))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 1148))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1802))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1290))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1802))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1290))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 1204))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1802))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1291))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1803))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1291))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 1260))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1803))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1291))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1803))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1291))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 1316))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1803))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1292))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1804))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1292))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 1372))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1804))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1292))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1804))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1292))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 1428))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1804))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1293))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1805))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1293))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 1484))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1805))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1293))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1805))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1293))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 1540))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1805))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1294))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1806))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1294))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 1596))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1806))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1294))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1806))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1294))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 1652))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1806))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1295))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1807))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1295))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 1708))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1807))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1295))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1807))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1295))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 1764))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1807))]));
  }
  ((float*)T_relu)[(((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))] = max(((compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12544))] = max(((compute[(4)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12544))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25088))] = max(((compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25088))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37632))] = max(((compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37632))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50176))] = max(((compute[(16)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50176))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62720))] = max(((compute[(20)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 80))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62720))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75264))] = max(((compute[(24)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75264))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87808))] = max(((compute[(28)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 112))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87808))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 28))] = max(((compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 28))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12572))] = max(((compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12572))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25116))] = max(((compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25116))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37660))] = max(((compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37660))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50204))] = max(((compute[(17)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50204))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62748))] = max(((compute[(21)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 80))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62748))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75292))] = max(((compute[(25)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75292))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87836))] = max(((compute[(29)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 112))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87836))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))] = max(((compute[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12600))] = max(((compute[(6)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12600))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25144))] = max(((compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25144))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37688))] = max(((compute[(14)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37688))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50232))] = max(((compute[(18)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50232))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62776))] = max(((compute[(22)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 80))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62776))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75320))] = max(((compute[(26)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75320))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87864))] = max(((compute[(30)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 112))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87864))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 84))] = max(((compute[(3)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 84))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12628))] = max(((compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 16))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 12628))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25172))] = max(((compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25172))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37716))] = max(((compute[(15)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 48))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 37716))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50260))] = max(((compute[(19)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50260))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62804))] = max(((compute[(23)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 80))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 62804))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75348))] = max(((compute[(27)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75348))]), 0.000000e+00f);
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87892))] = max(((compute[(31)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + ((int)threadIdx.z)) + 112))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 87892))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[252];
  __shared__ float placeholder_shared[12];
  float PaddedInput_shared_local[9];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[7];
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.x)))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 4) + ((int)threadIdx.z)) % 9)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 4) + ((int)threadIdx.z)) % 9) < 8)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 196) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 4) + ((int)threadIdx.z)) / 9) * 49)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 4) + ((int)threadIdx.z)) % 9) * 7)) + ((int)threadIdx.x)) - 7))] : 0.000000e+00f);
  }
  if (((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) < 12) {
    if (((int)threadIdx.z) < 2) {
      placeholder_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.x)))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 12) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  for (int ax2 = 0; ax2 < 9; ++ax2) {
    PaddedInput_shared_local[(ax2)] = PaddedInput_shared[((((((int)threadIdx.z) * 63) + (ax2 * 7)) + ((int)threadIdx.x)))];
  }
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    placeholder_shared_local[(ax21)] = placeholder_shared[(((((int)threadIdx.z) * 3) + ax21))];
  }
  for (int i = 0; i < 7; ++i) {
    DepthwiseConv2d[(i)] = 0.000000e+00f;
    for (int di = 0; di < 3; ++di) {
      DepthwiseConv2d[(i)] = (DepthwiseConv2d[(i)] + (PaddedInput_shared_local[((i + di))] * placeholder_shared_local[(di)]));
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 7; ++ax2_inner_inner_inner) {
    ((float*)T_relu)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 49)) + (ax2_inner_inner_inner * 7)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(ax2_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 4) + ((int)threadIdx.z)))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_8_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[116];
  __shared__ float placeholder_shared[3];
  float PaddedInput_shared_local[12];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[4];
  PaddedInput_shared[(((int)threadIdx.x))] = ((1 <= ((int)threadIdx.x)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 14))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 13))];
  PaddedInput_shared[((((int)threadIdx.x) + 28))] = ((1 <= ((((int)threadIdx.x) + 28) % 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) + 28) / 29) * 28)) + ((((int)threadIdx.x) + 28) % 29)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 42))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) + 42) / 29) * 28)) + (((int)threadIdx.x) + 13)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 56))] = ((1 <= ((((int)threadIdx.x) + 27) % 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) + 56) / 29) * 28)) + ((((int)threadIdx.x) + 27) % 29)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 70))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) + 70) / 29) * 28)) + (((int)threadIdx.x) + 12)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 84))] = ((1 <= ((((int)threadIdx.x) + 26) % 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) + 84) / 29) * 28)) + ((((int)threadIdx.x) + 26) % 29)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 98))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) + 98) / 29) * 28)) + (((int)threadIdx.x) + 11)) - 1))];
  if (((int)threadIdx.x) < 4) {
    PaddedInput_shared[((((int)threadIdx.x) + 112))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) + 112) / 29) * 28)) + (((int)threadIdx.x) + 25)) - 1))];
  }
  if (((int)threadIdx.x) < 3) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 3) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[((((int)threadIdx.x) * 2))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 1))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 2))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 29))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 30))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 31))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 58))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 59))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 60))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 87))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 88))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 89))];
  placeholder_shared_local[(0)] = placeholder_shared[(0)];
  placeholder_shared_local[(1)] = placeholder_shared[(1)];
  placeholder_shared_local[(2)] = placeholder_shared[(2)];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(2)]));
  ((float*)T_add)[((((((int)blockIdx.z) * 392) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)))] = (DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 392) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 14))] = (DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 392) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 28))] = (DepthwiseConv2d[(2)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 392) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 42))] = (DepthwiseConv2d[(3)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
}

extern "C" __global__ void fused_nn_conv2d_add_4_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[420];
  __shared__ float placeholder_shared[6];
  float PaddedInput_shared_local[21];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[7];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 15; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + (((int)threadIdx.z) * 14)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = ((1 <= (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + (((int)threadIdx.z) * 14)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) % 15)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 392) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + (((int)threadIdx.z) * 14)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) / 15) * 14)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 28) + (((int)threadIdx.z) * 14)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) % 15)) - 1))] : 0.000000e+00f);
  }
  if ((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) < 6) {
    if (((((int)threadIdx.z) * 2) + ((int)threadIdx.y)) < 1) {
      if (((int)threadIdx.z) < 1) {
        placeholder_shared[((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + (((int)blockIdx.z) * 6)) + ((int)threadIdx.x)))];
      }
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax3 = 0; ax3 < 3; ++ax3) {
    PaddedInput_shared_local[(ax3)] = PaddedInput_shared[(((((((int)threadIdx.z) * 210) + (((int)threadIdx.y) * 15)) + (((int)threadIdx.x) * 2)) + ax3))];
    PaddedInput_shared_local[((ax3 + 3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 210) + (((int)threadIdx.y) * 15)) + (((int)threadIdx.x) * 2)) + ax3) + 30))];
    PaddedInput_shared_local[((ax3 + 6))] = PaddedInput_shared[((((((((int)threadIdx.z) * 210) + (((int)threadIdx.y) * 15)) + (((int)threadIdx.x) * 2)) + ax3) + 60))];
    PaddedInput_shared_local[((ax3 + 9))] = PaddedInput_shared[((((((((int)threadIdx.z) * 210) + (((int)threadIdx.y) * 15)) + (((int)threadIdx.x) * 2)) + ax3) + 90))];
    PaddedInput_shared_local[((ax3 + 12))] = PaddedInput_shared[((((((((int)threadIdx.z) * 210) + (((int)threadIdx.y) * 15)) + (((int)threadIdx.x) * 2)) + ax3) + 120))];
    PaddedInput_shared_local[((ax3 + 15))] = PaddedInput_shared[((((((((int)threadIdx.z) * 210) + (((int)threadIdx.y) * 15)) + (((int)threadIdx.x) * 2)) + ax3) + 150))];
    PaddedInput_shared_local[((ax3 + 18))] = PaddedInput_shared[((((((((int)threadIdx.z) * 210) + (((int)threadIdx.y) * 15)) + (((int)threadIdx.x) * 2)) + ax3) + 180))];
  }
  #pragma unroll
  for (int ax31 = 0; ax31 < 3; ++ax31) {
    placeholder_shared_local[(ax31)] = placeholder_shared[(((((int)threadIdx.z) * 3) + ax31))];
  }
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  #pragma unroll
  for (int dj = 0; dj < 3; ++dj) {
    DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(dj)] * placeholder_shared_local[(dj)]));
    DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[((dj + 3))] * placeholder_shared_local[(dj)]));
    DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[((dj + 6))] * placeholder_shared_local[(dj)]));
    DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[((dj + 9))] * placeholder_shared_local[(dj)]));
    DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[((dj + 12))] * placeholder_shared_local[(dj)]));
    DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[((dj + 15))] * placeholder_shared_local[(dj)]));
    DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[((dj + 18))] * placeholder_shared_local[(dj)]));
  }
  ((float*)T_add)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = (DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 14))] = (DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 28))] = (DepthwiseConv2d[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 42))] = (DepthwiseConv2d[(3)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 56))] = (DepthwiseConv2d[(4)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 70))] = (DepthwiseConv2d[(5)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 84))] = (DepthwiseConv2d[(6)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]);
}

extern "C" __global__ void fused_nn_conv2d_add_14_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[464];
  __shared__ float placeholder_shared[3];
  float PaddedInput_shared_local[48];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[16];
  PaddedInput_shared[(((int)threadIdx.x))] = ((1 <= ((int)threadIdx.x)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 28))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 27))];
  PaddedInput_shared[((((int)threadIdx.x) + 56))] = (((1 <= ((((int)threadIdx.x) + 56) % 58)) && (((((int)threadIdx.x) + 56) % 58) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 56) / 58) * 56)) + ((((int)threadIdx.x) + 56) % 58)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 84))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 84) / 58) * 56)) + (((int)threadIdx.x) + 26)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 112))] = (((1 <= ((((int)threadIdx.x) + 54) % 58)) && (((((int)threadIdx.x) + 54) % 58) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 112) / 58) * 56)) + ((((int)threadIdx.x) + 54) % 58)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 140))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 140) / 58) * 56)) + (((int)threadIdx.x) + 24)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 168))] = (((1 <= ((((int)threadIdx.x) + 52) % 58)) && (((((int)threadIdx.x) + 52) % 58) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 168) / 58) * 56)) + ((((int)threadIdx.x) + 52) % 58)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 196))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 196) / 58) * 56)) + (((int)threadIdx.x) + 22)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 224))] = (((1 <= ((((int)threadIdx.x) + 50) % 58)) && (((((int)threadIdx.x) + 50) % 58) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 224) / 58) * 56)) + ((((int)threadIdx.x) + 50) % 58)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 252))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 252) / 58) * 56)) + (((int)threadIdx.x) + 20)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 280))] = (((1 <= ((((int)threadIdx.x) + 48) % 58)) && (((((int)threadIdx.x) + 48) % 58) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 280) / 58) * 56)) + ((((int)threadIdx.x) + 48) % 58)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 308))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 308) / 58) * 56)) + (((int)threadIdx.x) + 18)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 336))] = (((1 <= ((((int)threadIdx.x) + 46) % 58)) && (((((int)threadIdx.x) + 46) % 58) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 336) / 58) * 56)) + ((((int)threadIdx.x) + 46) % 58)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 364))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 364) / 58) * 56)) + (((int)threadIdx.x) + 16)) - 1))];
  PaddedInput_shared[((((int)threadIdx.x) + 392))] = (((1 <= ((((int)threadIdx.x) + 44) % 58)) && (((((int)threadIdx.x) + 44) % 58) < 57)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 392) / 58) * 56)) + ((((int)threadIdx.x) + 44) % 58)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 420))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 420) / 58) * 56)) + (((int)threadIdx.x) + 14)) - 1))];
  if (((int)threadIdx.x) < 16) {
    PaddedInput_shared[((((int)threadIdx.x) + 448))] = ((((int)threadIdx.x) < 15) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((((int)threadIdx.x) + 448) / 58) * 56)) + (((int)threadIdx.x) + 42)) - 1))] : 0.000000e+00f);
  }
  if (((int)threadIdx.x) < 3) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 3) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[(((int)threadIdx.x))];
  PaddedInput_shared_local[(24)] = PaddedInput_shared[((((int)threadIdx.x) + 28))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[((((int)threadIdx.x) + 1))];
  PaddedInput_shared_local[(25)] = PaddedInput_shared[((((int)threadIdx.x) + 29))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[((((int)threadIdx.x) + 2))];
  PaddedInput_shared_local[(26)] = PaddedInput_shared[((((int)threadIdx.x) + 30))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[((((int)threadIdx.x) + 58))];
  PaddedInput_shared_local[(27)] = PaddedInput_shared[((((int)threadIdx.x) + 86))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[((((int)threadIdx.x) + 59))];
  PaddedInput_shared_local[(28)] = PaddedInput_shared[((((int)threadIdx.x) + 87))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[((((int)threadIdx.x) + 60))];
  PaddedInput_shared_local[(29)] = PaddedInput_shared[((((int)threadIdx.x) + 88))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[((((int)threadIdx.x) + 116))];
  PaddedInput_shared_local[(30)] = PaddedInput_shared[((((int)threadIdx.x) + 144))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[((((int)threadIdx.x) + 117))];
  PaddedInput_shared_local[(31)] = PaddedInput_shared[((((int)threadIdx.x) + 145))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[((((int)threadIdx.x) + 118))];
  PaddedInput_shared_local[(32)] = PaddedInput_shared[((((int)threadIdx.x) + 146))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[((((int)threadIdx.x) + 174))];
  PaddedInput_shared_local[(33)] = PaddedInput_shared[((((int)threadIdx.x) + 202))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[((((int)threadIdx.x) + 175))];
  PaddedInput_shared_local[(34)] = PaddedInput_shared[((((int)threadIdx.x) + 203))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[((((int)threadIdx.x) + 176))];
  PaddedInput_shared_local[(35)] = PaddedInput_shared[((((int)threadIdx.x) + 204))];
  PaddedInput_shared_local[(12)] = PaddedInput_shared[((((int)threadIdx.x) + 232))];
  PaddedInput_shared_local[(36)] = PaddedInput_shared[((((int)threadIdx.x) + 260))];
  PaddedInput_shared_local[(13)] = PaddedInput_shared[((((int)threadIdx.x) + 233))];
  PaddedInput_shared_local[(37)] = PaddedInput_shared[((((int)threadIdx.x) + 261))];
  PaddedInput_shared_local[(14)] = PaddedInput_shared[((((int)threadIdx.x) + 234))];
  PaddedInput_shared_local[(38)] = PaddedInput_shared[((((int)threadIdx.x) + 262))];
  PaddedInput_shared_local[(15)] = PaddedInput_shared[((((int)threadIdx.x) + 290))];
  PaddedInput_shared_local[(39)] = PaddedInput_shared[((((int)threadIdx.x) + 318))];
  PaddedInput_shared_local[(16)] = PaddedInput_shared[((((int)threadIdx.x) + 291))];
  PaddedInput_shared_local[(40)] = PaddedInput_shared[((((int)threadIdx.x) + 319))];
  PaddedInput_shared_local[(17)] = PaddedInput_shared[((((int)threadIdx.x) + 292))];
  PaddedInput_shared_local[(41)] = PaddedInput_shared[((((int)threadIdx.x) + 320))];
  PaddedInput_shared_local[(18)] = PaddedInput_shared[((((int)threadIdx.x) + 348))];
  PaddedInput_shared_local[(42)] = PaddedInput_shared[((((int)threadIdx.x) + 376))];
  PaddedInput_shared_local[(19)] = PaddedInput_shared[((((int)threadIdx.x) + 349))];
  PaddedInput_shared_local[(43)] = PaddedInput_shared[((((int)threadIdx.x) + 377))];
  PaddedInput_shared_local[(20)] = PaddedInput_shared[((((int)threadIdx.x) + 350))];
  PaddedInput_shared_local[(44)] = PaddedInput_shared[((((int)threadIdx.x) + 378))];
  PaddedInput_shared_local[(21)] = PaddedInput_shared[((((int)threadIdx.x) + 406))];
  PaddedInput_shared_local[(45)] = PaddedInput_shared[((((int)threadIdx.x) + 434))];
  PaddedInput_shared_local[(22)] = PaddedInput_shared[((((int)threadIdx.x) + 407))];
  PaddedInput_shared_local[(46)] = PaddedInput_shared[((((int)threadIdx.x) + 435))];
  PaddedInput_shared_local[(23)] = PaddedInput_shared[((((int)threadIdx.x) + 408))];
  PaddedInput_shared_local[(47)] = PaddedInput_shared[((((int)threadIdx.x) + 436))];
  placeholder_shared_local[(0)] = placeholder_shared[(0)];
  placeholder_shared_local[(1)] = placeholder_shared[(1)];
  placeholder_shared_local[(2)] = placeholder_shared[(2)];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(8)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(24)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(25)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(26)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(9)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(27)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(28)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(29)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(10)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(30)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(31)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(32)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(11)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(33)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(34)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(35)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(12)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(12)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(36)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(13)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(37)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(14)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(38)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(13)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(15)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(39)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(16)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(40)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(17)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(41)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  DepthwiseConv2d[(14)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(18)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(14)] = (DepthwiseConv2d[(14)] + (PaddedInput_shared_local[(42)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(19)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(14)] = (DepthwiseConv2d[(14)] + (PaddedInput_shared_local[(43)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(20)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(14)] = (DepthwiseConv2d[(14)] + (PaddedInput_shared_local[(44)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(7)] = 0.000000e+00f;
  DepthwiseConv2d[(15)] = 0.000000e+00f;
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(21)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(15)] = (DepthwiseConv2d[(15)] + (PaddedInput_shared_local[(45)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(22)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(15)] = (DepthwiseConv2d[(15)] + (PaddedInput_shared_local[(46)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(23)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(15)] = (DepthwiseConv2d[(15)] + (PaddedInput_shared_local[(47)] * placeholder_shared_local[(2)]));
  ((float*)T_add)[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)))] = (DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 28))] = (DepthwiseConv2d[(8)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 56))] = (DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 84))] = (DepthwiseConv2d[(9)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 112))] = (DepthwiseConv2d[(2)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 140))] = (DepthwiseConv2d[(10)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 168))] = (DepthwiseConv2d[(3)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 196))] = (DepthwiseConv2d[(11)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 224))] = (DepthwiseConv2d[(4)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 252))] = (DepthwiseConv2d[(12)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 280))] = (DepthwiseConv2d[(5)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 308))] = (DepthwiseConv2d[(13)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 336))] = (DepthwiseConv2d[(6)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 364))] = (DepthwiseConv2d[(14)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 392))] = (DepthwiseConv2d[(7)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + ((int)threadIdx.x)) + 420))] = (DepthwiseConv2d[(15)] + ((float*)placeholder2)[(((int)blockIdx.z))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_2_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[210];
  __shared__ float placeholder_shared[6];
  float PaddedInput_shared_local[6];
  float placeholder_shared_local[6];
  float DepthwiseConv2d[2];
  PaddedInput_shared[(((((int)threadIdx.y) * 7) + ((int)threadIdx.x)))] = ((1 <= ((int)threadIdx.y)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) - 7))] : 0.000000e+00f);
  PaddedInput_shared[((((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) + 49))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 42))];
  PaddedInput_shared[((((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) + 98))] = ((1 <= ((((int)threadIdx.y) + 14) % 15)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 196) + (((((int)threadIdx.y) + 14) / 15) * 98)) + (((((int)threadIdx.y) + 14) % 15) * 7)) + ((int)threadIdx.x)) - 7))] : 0.000000e+00f);
  PaddedInput_shared[((((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) + 147))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 196) + (((((int)threadIdx.y) + 21) / 15) * 98)) + ((((int)threadIdx.y) + 6) * 7)) + ((int)threadIdx.x)) - 7))];
  if (((int)threadIdx.y) < 2) {
    PaddedInput_shared[((((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) + 196))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 196) + (((((int)threadIdx.y) + 28) / 15) * 98)) + ((((int)threadIdx.y) + 13) * 7)) + ((int)threadIdx.x)) - 7))];
  }
  if (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) < 6) {
    if (((int)threadIdx.y) < 1) {
      placeholder_shared[(((((int)threadIdx.y) * 7) + ((int)threadIdx.x)))] = ((float*)placeholder1)[((((((int)threadIdx.y) * 7) + (((int)blockIdx.z) * 6)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[((((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 7))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[((((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 14))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[((((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 105))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[((((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 112))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[((((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 119))];
  placeholder_shared_local[(0)] = placeholder_shared[(0)];
  placeholder_shared_local[(1)] = placeholder_shared[(1)];
  placeholder_shared_local[(2)] = placeholder_shared[(2)];
  placeholder_shared_local[(3)] = placeholder_shared[(3)];
  placeholder_shared_local[(4)] = placeholder_shared[(4)];
  placeholder_shared_local[(5)] = placeholder_shared[(5)];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(5)]));
  ((float*)T_relu)[((((((int)blockIdx.z) * 98) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = max((DepthwiseConv2d[(0)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 98) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 49))] = max((DepthwiseConv2d[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_max_pool2d_kernel0(void* __restrict__ placeholder, void* __restrict__ tensor) {
  float tensor_local[1];
  tensor_local[(0)] = -3.402823e+38f;
  for (int rv = 0; rv < 3; ++rv) {
    for (int rv1 = 0; rv1 < 3; ++rv1) {
      tensor_local[(0)] = max(tensor_local[(0)], (((1 <= ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 3136) / 56) * 2) + rv)) && (1 <= (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 56) * 2) + rv1))) ? ((float*)placeholder)[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 56) * 224) + (rv * 112)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 56) * 2)) + rv1) - 113))] : -3.402823e+38f));
    }
  }
  ((float*)tensor)[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tensor_local[(0)];
}

extern "C" __global__ void fused_nn_conv2d_add_18_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[128];
  __shared__ float pad_temp_shared[896];
  __shared__ float placeholder_shared[256];
  #pragma unroll
  for (int ff_init = 0; ff_init < 16; ++ff_init) {
    #pragma unroll
    for (int yy_init = 0; yy_init < 2; ++yy_init) {
      compute[(((ff_init * 2) + yy_init))] = 0.000000e+00f;
      compute[((((ff_init * 2) + yy_init) + 64))] = 0.000000e+00f;
      compute[((((ff_init * 2) + yy_init) + 32))] = 0.000000e+00f;
      compute[((((ff_init * 2) + yy_init) + 96))] = 0.000000e+00f;
    }
  }
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 224)) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2)) < 64) {
        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 256) {
          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2) * 64)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 3)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 16; ++ff) {
        #pragma unroll
        for (int yy = 0; yy < 2; ++yy) {
          compute[(((ff * 2) + yy))] = (compute[(((ff * 2) + yy))] + (pad_temp_shared[((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
          compute[((((ff * 2) + yy) + 64))] = (compute[((((ff * 2) + yy) + 64))] + (pad_temp_shared[(((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)) + 112))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
          compute[((((ff * 2) + yy) + 32))] = (compute[((((ff * 2) + yy) + 32))] + (pad_temp_shared[(((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
          compute[((((ff * 2) + yy) + 96))] = (compute[((((ff * 2) + yy) + 96))] + (pad_temp_shared[(((((rc_inner * 224) + (yy * 56)) + ((int)threadIdx.x)) + 140))] * placeholder_shared[((((((int)threadIdx.z) * 64) + (ff * 4)) + rc_inner))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 16; ++ax1_inner_inner_inner) {
    #pragma unroll
    for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
      ((float*)T_add)[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)))] = (compute[(((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]);
      ((float*)T_add)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 112))] = (compute[((((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner) + 64))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]);
      ((float*)T_add)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 28))] = (compute[((((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner) + 32))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]);
      ((float*)T_add)[((((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 50176)) + (ax1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 224)) + (ax2_inner_inner_inner * 56)) + ((int)threadIdx.x)) + 140))] = (compute[((((ax1_inner_inner_inner * 2) + ax2_inner_inner_inner) + 96))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 16)) + ax1_inner_inner_inner))]);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[1960];
  __shared__ float placeholder_shared[280];
  float PaddedInput_shared_local[7];
  float placeholder_shared_local[7];
  float DepthwiseConv2d[1];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 280) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)))] = ((float*)placeholder)[(((((((int)blockIdx.z) * 1960) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 280)) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)))];
  }
  placeholder_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 280) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)))];
  __syncthreads();
  #pragma unroll
  for (int ax3 = 0; ax3 < 7; ++ax3) {
    PaddedInput_shared_local[(ax3)] = PaddedInput_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.y) * 7)) + ax3))];
  }
  #pragma unroll
  for (int ax31 = 0; ax31 < 7; ++ax31) {
    placeholder_shared_local[(ax31)] = placeholder_shared[(((((int)threadIdx.z) * 7) + ax31))];
  }
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  #pragma unroll
  for (int dj = 0; dj < 7; ++dj) {
    DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(dj)] * placeholder_shared_local[(dj)]));
  }
  ((float*)T_add)[((((((int)blockIdx.z) * 280) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)))] = (DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 40) + ((int)threadIdx.z)))]);
}

extern "C" __global__ void fused_nn_conv2d_add_7_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[8];
  __shared__ float pad_temp_shared[224];
  __shared__ float placeholder_shared[256];
  #pragma unroll
  for (int yy_init = 0; yy_init < 2; ++yy_init) {
    compute[(yy_init)] = 0.000000e+00f;
    compute[((yy_init + 2))] = 0.000000e+00f;
    compute[((yy_init + 4))] = 0.000000e+00f;
    compute[((yy_init + 6))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3)) < 32) {
        if ((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 256) {
          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 32) {
            placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 7)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {
      #pragma unroll
      for (int yy = 0; yy < 2; ++yy) {
        compute[(yy)] = (compute[(yy)] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 8) + rc_inner))]));
        compute[((yy + 2))] = (compute[((yy + 2))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 64))]));
        compute[((yy + 4))] = (compute[((yy + 4))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 128))]));
        compute[((yy + 6))] = (compute[((yy + 6))] + (pad_temp_shared[((((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 192))]));
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    ((float*)T_add)[((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)))] = (compute[(ax2_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + ((int)threadIdx.z)))]);
    ((float*)T_add)[(((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 1568))] = (compute[((ax2_inner_inner_inner + 2))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 8))]);
    ((float*)T_add)[(((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 3136))] = (compute[((ax2_inner_inner_inner + 4))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 16))]);
    ((float*)T_add)[(((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 4704))] = (compute[((ax2_inner_inner_inner + 6))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 24))]);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_10_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[960];
  __shared__ float placeholder_shared[96];
  float PaddedInput_shared_local[12];
  float placeholder_shared_local[12];
  float DepthwiseConv2d[4];
  PaddedInput_shared[(((((int)threadIdx.z) * 28) + ((int)threadIdx.x)))] = (((1 <= (((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) % 30)) && ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) % 30) < 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 25088) + ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) / 30) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) % 30)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 224))] = (((1 <= ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 14) % 30)) && (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 14) % 30) < 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 25088) + (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 224) / 30) * 784)) + (((int)blockIdx.y) * 28)) + ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 14) % 30)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 448))] = (((1 <= ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 28) % 30)) && (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 28) % 30) < 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 25088) + (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 448) / 30) * 784)) + (((int)blockIdx.y) * 28)) + ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 28) % 30)) - 1))] : 0.000000e+00f);
  PaddedInput_shared[((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 672))] = (((1 <= ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 12) % 30)) && (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 12) % 30) < 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 25088) + (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 672) / 30) * 784)) + (((int)blockIdx.y) * 28)) + ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 12) % 30)) - 1))] : 0.000000e+00f);
  if (((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) < 64) {
    if (((int)threadIdx.z) < 3) {
      PaddedInput_shared[((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 896))] = (((1 <= ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 26) % 30)) && (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 26) % 30) < 29)) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 25088) + (((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 896) / 30) * 784)) + (((int)blockIdx.y) * 28)) + ((((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) + 26) % 30)) - 1))] : 0.000000e+00f);
    }
  }
  if (((((int)threadIdx.z) * 28) + ((int)threadIdx.x)) < 96) {
    if (((int)threadIdx.z) < 4) {
      placeholder_shared[(((((int)threadIdx.z) * 28) + ((int)threadIdx.x)))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 96) + (((int)threadIdx.z) * 28)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((int)threadIdx.z) * 60) + ((int)threadIdx.x)))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 480))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 1))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 481))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 2))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 482))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 30))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 510))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 31))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 511))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 32))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[((((((int)threadIdx.z) * 60) + ((int)threadIdx.x)) + 512))];
  placeholder_shared_local[(0)] = placeholder_shared[((((int)threadIdx.z) * 6))];
  placeholder_shared_local[(6)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 48))];
  placeholder_shared_local[(1)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 1))];
  placeholder_shared_local[(7)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 49))];
  placeholder_shared_local[(2)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 2))];
  placeholder_shared_local[(8)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 50))];
  placeholder_shared_local[(3)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 3))];
  placeholder_shared_local[(9)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 51))];
  placeholder_shared_local[(4)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 4))];
  placeholder_shared_local[(10)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 52))];
  placeholder_shared_local[(5)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 5))];
  placeholder_shared_local[(11)] = placeholder_shared[(((((int)threadIdx.z) * 6) + 53))];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(11)]));
  ((float*)T_add)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)))] = (DepthwiseConv2d[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 12544))] = (DepthwiseConv2d[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 784))] = (DepthwiseConv2d[(1)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 13328))] = (DepthwiseConv2d[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_1_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[14];
  __shared__ float pad_temp_shared[784];
  __shared__ float placeholder_shared[256];
  compute[(0)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((((int)threadIdx.x) * 2) / 7) * 49)) + (((((int)threadIdx.x) * 2) % 7) * 7)))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 1))] = ((float*)placeholder)[((((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((((int)threadIdx.x) * 2) / 7) * 49)) + (((((int)threadIdx.x) * 2) % 7) * 7)) + 1))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 2))] = ((float*)placeholder)[((((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((((int)threadIdx.x) * 2) / 7) * 49)) + (((((int)threadIdx.x) * 2) % 7) * 7)) + 2))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 3))] = ((float*)placeholder)[((((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((((int)threadIdx.x) * 2) / 7) * 49)) + (((((int)threadIdx.x) * 2) % 7) * 7)) + 3))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 4))] = ((float*)placeholder)[((((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((((int)threadIdx.x) * 2) / 7) * 49)) + (((((int)threadIdx.x) * 2) % 7) * 7)) + 4))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 5))] = ((float*)placeholder)[((((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((((int)threadIdx.x) * 2) / 7) * 49)) + (((((int)threadIdx.x) * 2) % 7) * 7)) + 5))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 6))] = ((float*)placeholder)[((((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((((int)threadIdx.x) * 2) / 7) * 49)) + (((((int)threadIdx.x) * 2) % 7) * 7)) + 6))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 7))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.x) * 14)) + 7))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 8))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.x) * 14)) + 8))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 9))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.x) * 14)) + 9))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 10))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.x) * 14)) + 10))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 11))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.x) * 14)) + 11))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 12))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.x) * 14)) + 12))];
    pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.x) * 14)) + 13))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.x) * 14)) + 13))];
    placeholder_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (((((int)threadIdx.x) * 5) / 16) * 2048)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 5) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 1) >> 4) * 2048)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 1) & 15)))];
    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 5) + 2) >> 4)) < 16) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 254) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 2))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 2) >> 4) * 2048)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 2) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 5) + 3) >> 4)) < 16) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 253) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 3))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 3) >> 4) * 2048)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 3) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 5) + 4) >> 4)) < 16) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 252) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 4))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 4) >> 4) * 2048)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 4) & 15)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 7))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 21))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 35))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 35))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 105))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 105))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 119))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 119))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 133))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 133))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 203))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 203))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 217))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 217))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 231))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 231))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 245))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 245))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 259))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 259))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 315))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 315))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 329))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 329))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 343))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 343))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 357))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 357))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 371))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 371))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 399))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 399))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 406))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 413))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 413))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 420))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 427))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 427))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 434))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 441))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 441))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 455))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 455))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 462))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 469))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 469))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 476))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 483))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 483))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 490))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 497))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 497))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 511))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 511))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 518))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 525))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 525))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 532))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 539))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 539))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 546))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 553))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 553))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 567))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 567))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 574))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 581))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 581))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 588))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 595))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 595))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 602))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 609))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 609))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 623))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 623))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 630))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 644))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 658))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 679))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 679))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 686))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 693))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 693))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 700))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 707))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 707))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 714))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 721))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 721))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 735))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 735))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 749))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 749))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 756))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 763))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 763))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 777))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 777))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  }
  ((float*)T_relu)[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)))] = max((compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 392))] = max((compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7))] = max((compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 399))] = max((compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 14))] = max((compute[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 406))] = max((compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 21))] = max((compute[(3)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 413))] = max((compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 28))] = max((compute[(4)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 420))] = max((compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 35))] = max((compute[(5)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 427))] = max((compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 42))] = max((compute[(6)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 434))] = max((compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_9_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[896];
  __shared__ float placeholder_shared[512];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    #pragma unroll
    for (int yy_init = 0; yy_init < 4; ++yy_init) {
      compute[(((ff_init * 4) + yy_init))] = 0.000000e+00f;
      compute[((((ff_init * 4) + yy_init) + 8))] = 0.000000e+00f;
      compute[((((ff_init * 4) + yy_init) + 16))] = 0.000000e+00f;
      compute[((((ff_init * 4) + yy_init) + 24))] = 0.000000e+00f;
    }
  }
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 6272) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3)) < 64) {
        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 512) {
          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 7)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        #pragma unroll
        for (int yy = 0; yy < 4; ++yy) {
          compute[(((ff * 4) + yy))] = (compute[(((ff * 4) + yy))] + (pad_temp_shared[((((rc_inner * 112) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner))]));
          compute[((((ff * 4) + yy) + 8))] = (compute[((((ff * 4) + yy) + 8))] + (pad_temp_shared[((((rc_inner * 112) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 128))]));
          compute[((((ff * 4) + yy) + 16))] = (compute[((((ff * 4) + yy) + 16))] + (pad_temp_shared[((((rc_inner * 112) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 256))]));
          compute[((((ff * 4) + yy) + 24))] = (compute[((((ff * 4) + yy) + 24))] + (pad_temp_shared[((((rc_inner * 112) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 384))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    #pragma unroll
    for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 4; ++ax2_inner_inner_inner) {
      ((float*)T_add)[(((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)))] = (compute[(((ax1_inner_inner_inner * 4) + ax2_inner_inner_inner))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]);
      ((float*)T_add)[((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)) + 12544))] = (compute[((((ax1_inner_inner_inner * 4) + ax2_inner_inner_inner) + 8))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]);
      ((float*)T_add)[((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)) + 25088))] = (compute[((((ax1_inner_inner_inner * 4) + ax2_inner_inner_inner) + 16))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]);
      ((float*)T_add)[((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)) + 37632))] = (compute[((((ax1_inner_inner_inner * 4) + ax2_inner_inner_inner) + 24))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_19_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[1320];
  __shared__ float placeholder_shared[2048];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    if (((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) < 1320) {
      pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder)[((((((rc_outer * 25088) + ((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) / 165) * 3136)) + (((int)blockIdx.y) * 224)) + (((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) % 165) / 55) * 56)) + (((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) % 55)))];
    }
    if (((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) < 1319) {
      pad_temp_shared[((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder)[((((((rc_outer * 25088) + (((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1) / 165) * 3136)) + (((int)blockIdx.y) * 224)) + ((((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1) % 165) / 55) * 56)) + ((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1) % 55)))];
    }
    if (((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) < 1318) {
      pad_temp_shared[((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder)[((((((rc_outer * 25088) + (((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2) / 165) * 3136)) + (((int)blockIdx.y) * 224)) + ((((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2) % 165) / 55) * 56)) + ((((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2) % 55)))];
    }
    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 8)) < 256) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 2048) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 5) / 8) * 256)) + (rc_outer * 8)) + ((((int)threadIdx.x) * 5) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 1) >> 3)) < 256) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 2047) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 1) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 3)) < 256) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 2046) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 2))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 2) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 2) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 3)) < 256) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 2045) {
        if (((int)threadIdx.x) < 13) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 3))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 3) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 3) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 4) >> 3)) < 256) {
      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 2044) {
        if (((int)threadIdx.x) < 12) {
          placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 4))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 4) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 4) & 7)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 512))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 768))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1024))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1280))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1536))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1792))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 512))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 768))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1024))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1280))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1536))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1792))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 512))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 768))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1024))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1280))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1536))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1792))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 512))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 768))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1024))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1280))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1536))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1792))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 513))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 769))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1025))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1281))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1537))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 165))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1793))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 513))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 769))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1025))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1281))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1537))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 275))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1793))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 513))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 769))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1025))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1281))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1537))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 193))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1793))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 513))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 769))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1025))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1281))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1537))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 303))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1793))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 514))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 770))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1026))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1282))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1538))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1794))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 514))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 770))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1026))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1282))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1538))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 440))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1794))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 514))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 770))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1026))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1282))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1538))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1794))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 514))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 770))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1026))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1282))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1538))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1794))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 515))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 771))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1027))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1283))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1539))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1795))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 515))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 771))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1027))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1283))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1539))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1795))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 515))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 771))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1027))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1283))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1539))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1795))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 515))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 771))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1027))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1283))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1539))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1795))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 516))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 772))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1028))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1284))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1540))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 660))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1796))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 516))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 772))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1028))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1284))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1540))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 770))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1796))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 516))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 772))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1028))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1284))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1540))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 688))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1796))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 516))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 772))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1028))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1284))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1540))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 798))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1796))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 517))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 773))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1029))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1285))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1541))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 825))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1797))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 517))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 773))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1029))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1285))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1541))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 935))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1797))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 517))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 773))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1029))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1285))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1541))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 853))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1797))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 517))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 773))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1029))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1285))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1541))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 963))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1797))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 518))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 774))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1030))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1286))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1542))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 990))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1798))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 518))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 774))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1030))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1286))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1542))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1100))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1798))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 518))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 774))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1030))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1286))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1542))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1018))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1798))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 518))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 774))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1030))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1286))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1542))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1798))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 519))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 775))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1031))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1287))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1543))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1155))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1799))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 519))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 775))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1031))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1287))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1543))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1265))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1799))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 519))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 775))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1031))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1287))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1543))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1799))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 519))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 775))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1031))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1287))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1543))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1293))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1799))]));
  }
  ((float*)T_add)[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 256) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 25088))] = (compute[(4)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 50176))] = (compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 75264))] = (compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 100352))] = (compute[(16)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 128))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 125440))] = (compute[(20)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 160))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 150528))] = (compute[(24)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 192))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 175616))] = (compute[(28)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 224))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 28))] = (compute[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 256) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 25116))] = (compute[(6)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 50204))] = (compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 75292))] = (compute[(14)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 100380))] = (compute[(18)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 128))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 125468))] = (compute[(22)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 160))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 150556))] = (compute[(26)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 192))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 175644))] = (compute[(30)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 224))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 14))] = (compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 256) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 25102))] = (compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 50190))] = (compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 75278))] = (compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 100366))] = (compute[(17)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 128))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 125454))] = (compute[(21)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 160))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 150542))] = (compute[(25)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 192))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 175630))] = (compute[(29)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 224))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 42))] = (compute[(3)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 256) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 25130))] = (compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 50218))] = (compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 75306))] = (compute[(15)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 100394))] = (compute[(19)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 128))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 125482))] = (compute[(23)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 160))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 150570))] = (compute[(27)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 192))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 175658))] = (compute[(31)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 224))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_9_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[896];
  __shared__ float placeholder_shared[1024];
  for (int yy_init = 0; yy_init < 2; ++yy_init) {
    for (int xx_init = 0; xx_init < 2; ++xx_init) {
      compute[(((yy_init * 2) + xx_init))] = 0.000000e+00f;
      compute[((((yy_init * 2) + xx_init) + 4))] = 0.000000e+00f;
      compute[((((yy_init * 2) + xx_init) + 8))] = 0.000000e+00f;
      compute[((((yy_init * 2) + xx_init) + 12))] = 0.000000e+00f;
    }
  }
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 64) {
        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 1024) {
          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      for (int yy = 0; yy < 2; ++yy) {
        for (int xx = 0; xx < 2; ++xx) {
          compute[(((yy * 2) + xx))] = (compute[(((yy * 2) + xx))] + (pad_temp_shared[(((((rc_inner * 56) + (yy * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
          compute[((((yy * 2) + xx) + 4))] = (compute[((((yy * 2) + xx) + 4))] + (pad_temp_shared[(((((rc_inner * 56) + (yy * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
          compute[((((yy * 2) + xx) + 8))] = (compute[((((yy * 2) + xx) + 8))] + (pad_temp_shared[(((((rc_inner * 56) + (yy * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
          compute[((((yy * 2) + xx) + 12))] = (compute[((((yy * 2) + xx) + 12))] + (pad_temp_shared[(((((rc_inner * 56) + (yy * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
        }
      }
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      ((float*)T_relu)[(((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((compute[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
      ((float*)T_relu)[((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 12544))] = max((compute[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
      ((float*)T_relu)[((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 25088))] = max((compute[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 8))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
      ((float*)T_relu)[((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 37632))] = max((compute[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 12))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_3_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[14];
  __shared__ float pad_temp_shared[784];
  __shared__ float placeholder_shared[256];
  #pragma unroll
  for (int xx_init = 0; xx_init < 7; ++xx_init) {
    compute[(xx_init)] = 0.000000e+00f;
    compute[((xx_init + 7))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 14; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 98) + (((int)threadIdx.y) * 14)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 14)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 16) {
        if ((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 256) {
          if (((((int)threadIdx.y) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 32) {
            placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.y) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.y) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      #pragma unroll
      for (int xx = 0; xx < 7; ++xx) {
        compute[(xx)] = (compute[(xx)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + xx))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
        compute[((xx + 7))] = (compute[((xx + 7))] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 128))]));
      }
    }
  }
  #pragma unroll
  for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 7; ++ax3_inner_inner_inner) {
    ((float*)T_add)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ax3_inner_inner_inner))] = (compute[(ax3_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]);
    ((float*)T_add)[((((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ax3_inner_inner_inner) + 392))] = (compute[((ax3_inner_inner_inner + 7))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8))]);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_7_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[896];
  __shared__ float placeholder_shared[512];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    #pragma unroll
    for (int xx_init = 0; xx_init < 2; ++xx_init) {
      compute[(((ff_init * 2) + xx_init))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 8))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 16))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 24))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 4))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 12))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 20))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 28))] = 0.000000e+00f;
    }
  }
  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[(((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[(((((((rc_outer * 6272) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3)) < 64) {
        if (((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 512) {
          if ((((((int)threadIdx.y) * 32) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 32) {
              placeholder_shared[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (((int)threadIdx.y) * 2048)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 7)))];
            }
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        #pragma unroll
        for (int xx = 0; xx < 2; ++xx) {
          compute[(((ff * 2) + xx))] = (compute[(((ff * 2) + xx))] + (pad_temp_shared[(((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner))]));
          compute[((((ff * 2) + xx) + 8))] = (compute[((((ff * 2) + xx) + 8))] + (pad_temp_shared[(((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 128))]));
          compute[((((ff * 2) + xx) + 16))] = (compute[((((ff * 2) + xx) + 16))] + (pad_temp_shared[(((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 256))]));
          compute[((((ff * 2) + xx) + 24))] = (compute[((((ff * 2) + xx) + 24))] + (pad_temp_shared[(((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 384))]));
          compute[((((ff * 2) + xx) + 4))] = (compute[((((ff * 2) + xx) + 4))] + (pad_temp_shared[((((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx) + 56))] * placeholder_shared[((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner))]));
          compute[((((ff * 2) + xx) + 12))] = (compute[((((ff * 2) + xx) + 12))] + (pad_temp_shared[((((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx) + 56))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 128))]));
          compute[((((ff * 2) + xx) + 20))] = (compute[((((ff * 2) + xx) + 20))] + (pad_temp_shared[((((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx) + 56))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 256))]));
          compute[((((ff * 2) + xx) + 28))] = (compute[((((ff * 2) + xx) + 28))] + (pad_temp_shared[((((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx) + 56))] * placeholder_shared[(((((((int)threadIdx.z) * 16) + (ff * 8)) + rc_inner) + 384))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      ((float*)T_relu)[((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((compute[(((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
      ((float*)T_relu)[(((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 12544))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 8))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
      ((float*)T_relu)[(((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 25088))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 16))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
      ((float*)T_relu)[(((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 37632))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 24))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
      ((float*)T_relu)[(((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 56))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
      ((float*)T_relu)[(((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 12600))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 12))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
      ((float*)T_relu)[(((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 25144))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 20))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
      ((float*)T_relu)[(((((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (ax1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 37688))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 28))] + ((float*)placeholder2)[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_reshape_12_kernel0(void* __restrict__ T_reshape, void* __restrict__ placeholder) {
  if (((int)threadIdx.x) < 1000) {
    ((float*)T_reshape)[(((int)threadIdx.x))] = ((float*)placeholder)[(((int)threadIdx.x))];
  }
}

extern "C" __global__ void fused_nn_conv2d_add_1_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[10];
  __shared__ float pad_temp_shared[784];
  __shared__ float placeholder_shared[640];
  compute[(0)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[(((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 28)) + ((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 10) + ((((((int)threadIdx.y) * 23) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 40) {
        if (((((((int)threadIdx.z) * 160) + (((int)threadIdx.y) * 23)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 640) {
          if ((((((int)threadIdx.y) * 23) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 160) {
            if (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 23) {
              placeholder_shared[(((((((int)threadIdx.z) * 160) + (((int)threadIdx.y) * 23)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 81920) + (((int)threadIdx.z) * 20480)) + (((((((int)threadIdx.y) * 23) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 2048)) + (rc_outer * 16)) + ((((((int)threadIdx.y) * 23) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
            }
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 64))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 128))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 192))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 320))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 384))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 448))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 576))]));
    }
  }
  ((float*)T_add)[(((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 40) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 196))] = (compute[(1)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 4))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 392))] = (compute[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 8))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 588))] = (compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 12))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 784))] = (compute[(4)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 16))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 980))] = (compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 20))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 1176))] = (compute[(6)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 24))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 1372))] = (compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 28))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 1568))] = (compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 1960) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 1764))] = (compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 40) + ((int)threadIdx.z)) + 36))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_13_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[448];
  __shared__ float placeholder_shared[512];
  #pragma unroll
  for (int xx_init = 0; xx_init < 2; ++xx_init) {
    compute[(xx_init)] = 0.000000e+00f;
    compute[((xx_init + 4))] = 0.000000e+00f;
    compute[((xx_init + 8))] = 0.000000e+00f;
    compute[((xx_init + 12))] = 0.000000e+00f;
    compute[((xx_init + 16))] = 0.000000e+00f;
    compute[((xx_init + 20))] = 0.000000e+00f;
    compute[((xx_init + 24))] = 0.000000e+00f;
    compute[((xx_init + 28))] = 0.000000e+00f;
    compute[((xx_init + 2))] = 0.000000e+00f;
    compute[((xx_init + 6))] = 0.000000e+00f;
    compute[((xx_init + 10))] = 0.000000e+00f;
    compute[((xx_init + 14))] = 0.000000e+00f;
    compute[((xx_init + 18))] = 0.000000e+00f;
    compute[((xx_init + 22))] = 0.000000e+00f;
    compute[((xx_init + 26))] = 0.000000e+00f;
    compute[((xx_init + 30))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 25088) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3)) < 64) {
        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 512) {
          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 2048) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 7)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {
      #pragma unroll
      for (int xx = 0; xx < 2; ++xx) {
        compute[(xx)] = (compute[(xx)] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[(((((int)threadIdx.z) * 8) + rc_inner))]));
        compute[((xx + 4))] = (compute[((xx + 4))] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 64))]));
        compute[((xx + 8))] = (compute[((xx + 8))] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 128))]));
        compute[((xx + 12))] = (compute[((xx + 12))] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 192))]));
        compute[((xx + 16))] = (compute[((xx + 16))] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 256))]));
        compute[((xx + 20))] = (compute[((xx + 20))] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 320))]));
        compute[((xx + 24))] = (compute[((xx + 24))] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 384))]));
        compute[((xx + 28))] = (compute[((xx + 28))] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 448))]));
        compute[((xx + 2))] = (compute[((xx + 2))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + rc_inner))]));
        compute[((xx + 6))] = (compute[((xx + 6))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 64))]));
        compute[((xx + 10))] = (compute[((xx + 10))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 128))]));
        compute[((xx + 14))] = (compute[((xx + 14))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 192))]));
        compute[((xx + 18))] = (compute[((xx + 18))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 256))]));
        compute[((xx + 22))] = (compute[((xx + 22))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 320))]));
        compute[((xx + 26))] = (compute[((xx + 26))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 384))]));
        compute[((xx + 30))] = (compute[((xx + 30))] + (pad_temp_shared[(((((rc_inner * 56) + (((int)threadIdx.x) * 2)) + xx) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 448))]));
      }
    }
  }
  #pragma unroll
  for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
    ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((compute[(ax3_inner_inner_inner)] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 25088))] = max((compute[((ax3_inner_inner_inner + 4))] + ((float*)placeholder2)[((((int)threadIdx.z) + 8))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 50176))] = max((compute[((ax3_inner_inner_inner + 8))] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 75264))] = max((compute[((ax3_inner_inner_inner + 12))] + ((float*)placeholder2)[((((int)threadIdx.z) + 24))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 100352))] = max((compute[((ax3_inner_inner_inner + 16))] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 125440))] = max((compute[((ax3_inner_inner_inner + 20))] + ((float*)placeholder2)[((((int)threadIdx.z) + 40))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 150528))] = max((compute[((ax3_inner_inner_inner + 24))] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 175616))] = max((compute[((ax3_inner_inner_inner + 28))] + ((float*)placeholder2)[((((int)threadIdx.z) + 56))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 28))] = max((compute[((ax3_inner_inner_inner + 2))] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 25116))] = max((compute[((ax3_inner_inner_inner + 6))] + ((float*)placeholder2)[((((int)threadIdx.z) + 8))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 50204))] = max((compute[((ax3_inner_inner_inner + 10))] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 75292))] = max((compute[((ax3_inner_inner_inner + 14))] + ((float*)placeholder2)[((((int)threadIdx.z) + 24))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 100380))] = max((compute[((ax3_inner_inner_inner + 18))] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 125468))] = max((compute[((ax3_inner_inner_inner + 22))] + ((float*)placeholder2)[((((int)threadIdx.z) + 40))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 150556))] = max((compute[((ax3_inner_inner_inner + 26))] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
    ((float*)T_relu)[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 175644))] = max((compute[((ax3_inner_inner_inner + 30))] + ((float*)placeholder2)[((((int)threadIdx.z) + 56))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_14_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[1792];
  __shared__ float placeholder_shared[1024];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  __syncthreads();
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 50176))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 50176))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 50176))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 50176))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)) + 16))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)) + 16))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)) + 16))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  __syncthreads();
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 100352))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 100352))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 100352))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 100352))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)) + 32))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)) + 32))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)) + 32))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  __syncthreads();
  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 150528))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 150528))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 150528))];
  pad_temp_shared[((((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 150528))];
  if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 3) / 16)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1024) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + (((((int)threadIdx.x) * 3) / 16) * 64)) + ((((int)threadIdx.x) * 3) & 15)) + 48))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1023) {
      if (((int)threadIdx.x) < 43) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 1) & 15)) + 48))];
      }
    }
  }
  if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 64) {
    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) < 1022) {
      if (((int)threadIdx.x) < 42) {
        placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 3)) + 2))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 512) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 64)) + (((((int)threadIdx.x) * 3) + 2) & 15)) + 48))];
      }
    }
  }
  __syncthreads();
  compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 256))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 384))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 640))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 768))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 896))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 257))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 385))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 641))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 769))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 897))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 258))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 386))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 642))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 770))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 898))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 259))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 387))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 643))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 771))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 899))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 448))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 260))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 388))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 644))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 772))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 504))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 900))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 560))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 261))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 389))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 645))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 773))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 616))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 901))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 672))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 262))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 390))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 646))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 774))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 902))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 784))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 263))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 391))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 647))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 775))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 840))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 903))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 896))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 264))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 392))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 648))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 776))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 952))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 904))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1008))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 265))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 393))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 649))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 777))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1064))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 905))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1120))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 266))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 394))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 650))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 778))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1176))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 906))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1232))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 267))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 395))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 651))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 779))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1288))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 907))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1344))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 268))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 396))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 652))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 780))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1400))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 908))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 269))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 397))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 653))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 781))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1512))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 909))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1568))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 270))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 398))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 654))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 782))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1624))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 910))]));
  compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 1680))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
  compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 271))]));
  compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 399))]));
  compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 655))]));
  compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 783))]));
  compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 1736))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 911))]));
  ((float*)T_relu)[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))] = max((compute[(0)] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25088))] = max((compute[(2)] + ((float*)placeholder2)[((((int)threadIdx.z) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50176))] = max((compute[(4)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75264))] = max((compute[(6)] + ((float*)placeholder2)[((((int)threadIdx.z) + 24))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100352))] = max((compute[(8)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 125440))] = max((compute[(10)] + ((float*)placeholder2)[((((int)threadIdx.z) + 40))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150528))] = max((compute[(12)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 175616))] = max((compute[(14)] + ((float*)placeholder2)[((((int)threadIdx.z) + 56))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))] = max((compute[(1)] + ((float*)placeholder2)[(((int)threadIdx.z))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 25144))] = max((compute[(3)] + ((float*)placeholder2)[((((int)threadIdx.z) + 8))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 50232))] = max((compute[(5)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 75320))] = max((compute[(7)] + ((float*)placeholder2)[((((int)threadIdx.z) + 24))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 100408))] = max((compute[(9)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 125496))] = max((compute[(11)] + ((float*)placeholder2)[((((int)threadIdx.z) + 40))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 150584))] = max((compute[(13)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 175672))] = max((compute[(15)] + ((float*)placeholder2)[((((int)threadIdx.z) + 56))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_2_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[1008];
  __shared__ float placeholder_shared[48];
  float PaddedInput_shared_local[9];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[7];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)))] = (((1 <= ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) % 9)) && (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) % 9) < 8)) ? ((float*)placeholder)[(((((((int)blockIdx.z) * 784) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) / 9) * 7)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) % 9)) - 1))] : 0.000000e+00f);
  }
  if (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) < 48) {
    if (((int)threadIdx.z) < 7) {
      placeholder_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax3 = 0; ax3 < 9; ++ax3) {
    PaddedInput_shared_local[(ax3)] = PaddedInput_shared[((((((int)threadIdx.z) * 63) + (((int)threadIdx.y) * 9)) + ax3))];
  }
  #pragma unroll
  for (int ax31 = 0; ax31 < 3; ++ax31) {
    placeholder_shared_local[(ax31)] = placeholder_shared[(((((int)threadIdx.z) * 3) + ax31))];
  }
  #pragma unroll
  for (int j = 0; j < 7; ++j) {
    DepthwiseConv2d[(j)] = 0.000000e+00f;
    #pragma unroll
    for (int dj = 0; dj < 3; ++dj) {
      DepthwiseConv2d[(j)] = (DepthwiseConv2d[(j)] + (PaddedInput_shared_local[((j + dj))] * placeholder_shared_local[(dj)]));
    }
  }
  #pragma unroll
  for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 7; ++ax3_inner_inner_inner) {
    ((float*)T_add)[(((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ax3_inner_inner_inner))] = (DepthwiseConv2d[(ax3_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_20_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[1296];
  __shared__ float placeholder_shared[4096];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      if ((((((int)threadIdx.z) * 41) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 1296) {
        if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 41) {
          pad_temp_shared[((((((int)threadIdx.z) * 41) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 41) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 81) * 784)) + (((int)blockIdx.y) * 112)) + ((((((((int)threadIdx.z) * 41) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 81) / 27) * 28)) + ((((((int)threadIdx.z) * 41) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 27)))];
        }
      }
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 10; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 256) {
        if ((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 4096) {
          if (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {
            placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 2048))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 2560))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 3072))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((rc_inner * 81) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 3584))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1024))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 1536))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 2048))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 2560))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 3072))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 81) + (((int)threadIdx.x) * 2)) + 54))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 3584))]));
    }
  }
  ((float*)T_add)[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 256) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 6272))] = (compute[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 12544))] = (compute[(4)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 18816))] = (compute[(6)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 25088))] = (compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 128))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 31360))] = (compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 160))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 37632))] = (compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 192))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 43904))] = (compute[(14)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 224))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14))] = (compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 256) + ((int)threadIdx.z)))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 6286))] = (compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 32))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 12558))] = (compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 64))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 18830))] = (compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 96))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 25102))] = (compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 128))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 31374))] = (compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 160))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 37646))] = (compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 192))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 43918))] = (compute[(15)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 256) + ((int)threadIdx.z)) + 224))]);
}

extern "C" __global__ void fused_nn_conv2d_add_add_nn_relu_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2, void* __restrict__ placeholder3) {
  float compute[28];
  __shared__ float pad_temp_shared[392];
  __shared__ float placeholder_shared[256];
  compute[(0)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)))] = ((float*)placeholder)[((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)))];
    pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 1))] = ((float*)placeholder)[(((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 1))];
    pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 2))] = ((float*)placeholder)[(((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 2))];
    pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 3))] = ((float*)placeholder)[(((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 3))];
    pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 4))] = ((float*)placeholder)[(((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 4))];
    pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 5))] = ((float*)placeholder)[(((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 5))];
    pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 6))] = ((float*)placeholder)[(((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 6))];
    placeholder_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 5) / 8) * 512)) + (rc_outer * 8)) + ((((int)threadIdx.x) * 5) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 1) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 1) & 7)))];
    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 2) >> 3)) < 32) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 254) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 2))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 2) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 2) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 3) >> 3)) < 32) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 253) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 3))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 3) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 3) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 4) >> 3)) < 32) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 252) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 4))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 4) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 4) & 7)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 7))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 21))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 35))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 35))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 128))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 35))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 35))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 136))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 129))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 70))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 84))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 137))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 105))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 105))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 119))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 119))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 133))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 133))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 130))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 105))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 105))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 119))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 119))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 133))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 133))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 138))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 131))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 154))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 182))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 139))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 203))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 203))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 217))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 217))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 231))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 231))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 132))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 196))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 203))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 203))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 210))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 217))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 217))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 231))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 231))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 238))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 140))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 245))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 245))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 259))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 259))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 133))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 245))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 245))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 252))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 259))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 259))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 266))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 280))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 141))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 315))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 315))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 329))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 329))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 134))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 294))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 308))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 315))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 315))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 322))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 329))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 329))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 336))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 142))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 343))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 343))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 357))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 357))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 371))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 371))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 135))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 343))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 343))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 350))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 357))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 357))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 371))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 371))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 143))]));
  }
  ((float*)T_relu)[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)))] = max(((compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]) + ((float*)placeholder3)[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 784))] = max(((compute[(14)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 784))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 7))] = max(((compute[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 7))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 791))] = max(((compute[(16)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 791))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 14))] = max(((compute[(4)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 14))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 798))] = max(((compute[(18)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 798))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 21))] = max(((compute[(6)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 21))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 805))] = max(((compute[(20)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 805))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 28))] = max(((compute[(8)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 28))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 812))] = max(((compute[(22)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 812))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 35))] = max(((compute[(10)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 35))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 819))] = max(((compute[(24)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 819))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 42))] = max(((compute[(12)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 42))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 826))] = max(((compute[(26)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 16))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 826))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 49))] = max(((compute[(1)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 49))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 833))] = max(((compute[(15)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 833))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 56))] = max(((compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 56))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 840))] = max(((compute[(17)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 840))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 63))] = max(((compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 63))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 847))] = max(((compute[(19)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 847))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 70))] = max(((compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 70))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 854))] = max(((compute[(21)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 854))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 77))] = max(((compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 77))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 861))] = max(((compute[(23)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 861))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 84))] = max(((compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 84))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 868))] = max(((compute[(25)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 868))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 91))] = max(((compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 91))]), 0.000000e+00f);
  ((float*)T_relu)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 875))] = max(((compute[(27)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 17))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 875))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_6_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[512];
  __shared__ float placeholder_shared[48];
  float PaddedInput_shared_local[4];
  float placeholder_shared_local[3];
  float DepthwiseConv2d[2];
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 224) + (((int)threadIdx.z) * 14)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) < 512) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 2)) + ((int)threadIdx.y)) < 74) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 16) + ((int)threadIdx.z)) < 37) {
          PaddedInput_shared[((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 7) + ((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) >> 5)) & 15) * 32) + ((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) & 31)))] = (((1 <= ((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) & 15)) && (((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) & 15) < 15)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 3136) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 7) + ((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) >> 5)) & 15) * 196)) + (((int)blockIdx.y) * 28)) + ((((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) & 31) >> 4) * 14)) + ((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) & 15)) - 1))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) < 48) {
    if (((((int)threadIdx.z) * 2) + ((int)threadIdx.y)) < 7) {
      if (((int)threadIdx.z) < 4) {
        placeholder_shared[((((((int)threadIdx.z) * 14) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = ((float*)placeholder1)[(((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 14)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))];
      }
    }
  }
  __syncthreads();
  for (int ax3 = 0; ax3 < 4; ++ax3) {
    PaddedInput_shared_local[(ax3)] = PaddedInput_shared[(((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + ax3))];
  }
  for (int ax31 = 0; ax31 < 3; ++ax31) {
    placeholder_shared_local[(ax31)] = placeholder_shared[(((((int)threadIdx.z) * 3) + ax31))];
  }
  for (int j = 0; j < 2; ++j) {
    DepthwiseConv2d[(j)] = 0.000000e+00f;
    for (int dj = 0; dj < 3; ++dj) {
      DepthwiseConv2d[(j)] = (DepthwiseConv2d[(j)] + (PaddedInput_shared_local[((j + dj))] * placeholder_shared_local[(dj)]));
    }
  }
  for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
    ((float*)T_add)[(((((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = (DepthwiseConv2d[(ax3_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)))]);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_21_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[28];
  __shared__ float pad_temp_shared[1352];
  __shared__ float placeholder_shared[1024];
  compute[(0)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {
    __syncthreads();
    if (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) < 1352) {
      pad_temp_shared[(((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)))] = ((float*)placeholder)[(((((rc_outer * 1568) + ((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) / 169) * 196)) + (((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) % 169) / 13) * 14)) + (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) % 13)))];
    }
    if (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) < 1351) {
      if (((int)threadIdx.x) < 6) {
        pad_temp_shared[((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 1))] = ((float*)placeholder)[(((((rc_outer * 1568) + (((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 1) / 169) * 196)) + ((((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 1) % 169) / 13) * 14)) + ((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 1) % 13)))];
      }
    }
    if (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) < 1350) {
      if (((int)threadIdx.x) < 6) {
        pad_temp_shared[((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 2))] = ((float*)placeholder)[(((((rc_outer * 1568) + (((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 2) / 169) * 196)) + ((((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 2) % 169) / 13) * 14)) + ((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 2) % 13)))];
      }
    }
    if (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) < 1349) {
      if (((int)threadIdx.x) < 6) {
        pad_temp_shared[((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 3))] = ((float*)placeholder)[(((((rc_outer * 1568) + (((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 3) / 169) * 196)) + ((((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 3) % 169) / 13) * 14)) + ((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 3) % 13)))];
      }
    }
    if (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) < 1348) {
      if (((int)threadIdx.x) < 6) {
        pad_temp_shared[((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 4))] = ((float*)placeholder)[(((((rc_outer * 1568) + (((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 4) / 169) * 196)) + ((((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 4) % 169) / 13) * 14)) + ((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 4) % 13)))];
      }
    }
    if (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) < 1347) {
      if (((int)threadIdx.x) < 6) {
        pad_temp_shared[((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 5))] = ((float*)placeholder)[(((((rc_outer * 1568) + (((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 5) / 169) * 196)) + ((((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 5) % 169) / 13) * 14)) + ((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 5) % 13)))];
      }
    }
    if (((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) < 1346) {
      if (((int)threadIdx.x) < 6) {
        pad_temp_shared[((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 6))] = ((float*)placeholder)[(((((rc_outer * 1568) + (((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 6) / 169) * 196)) + ((((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 6) % 169) / 13) * 14)) + ((((((int)threadIdx.z) * 43) + (((int)threadIdx.x) * 7)) + 6) % 13)))];
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 4096)) + (((((int)threadIdx.x) * 5) / 8) * 1024)) + (rc_outer * 8)) + ((((int)threadIdx.x) * 5) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 1) >> 3) * 1024)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 1) & 7)))];
    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 2) >> 3)) < 128) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 1022) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 2))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 2) >> 3) * 1024)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 2) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 3) >> 3)) < 128) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 1021) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 3))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 3) >> 3) * 1024)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 3) & 7)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 4) >> 3)) < 128) {
      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 1020) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 4))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + 4) >> 3) * 1024)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 5) + 4) & 7)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
  }
  ((float*)T_add)[((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)))] = (compute[(0)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3136))] = (compute[(14)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 64))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 7))] = (compute[(1)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3143))] = (compute[(15)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 64))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 14))] = (compute[(2)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3150))] = (compute[(16)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 64))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 21))] = (compute[(3)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3157))] = (compute[(17)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 64))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 28))] = (compute[(4)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3164))] = (compute[(18)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 64))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 35))] = (compute[(5)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3171))] = (compute[(19)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 64))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 42))] = (compute[(6)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3178))] = (compute[(20)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 64))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 49))] = (compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3185))] = (compute[(21)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 65))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 56))] = (compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3192))] = (compute[(22)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 65))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 63))] = (compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3199))] = (compute[(23)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 65))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 70))] = (compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3206))] = (compute[(24)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 65))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 77))] = (compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3213))] = (compute[(25)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 65))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 84))] = (compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3220))] = (compute[(26)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 65))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 91))] = (compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 1))]);
  ((float*)T_add)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 98)) + ((int)threadIdx.x)) + 3227))] = (compute[(27)] + ((float*)placeholder2)[((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 2)) + 65))]);
}

extern "C" __global__ void fused_nn_conv2d_add_16_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[854];
  __shared__ float placeholder_shared[14];
  float PaddedInput_shared_local[98];
  float placeholder_shared_local[14];
  float DepthwiseConv2d[14];
  PaddedInput_shared[(((int)threadIdx.x))] = ((3 <= ((((int)blockIdx.x) * 56) + ((int)threadIdx.x))) ? ((float*)placeholder)[((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 28))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 25))];
  PaddedInput_shared[((((int)threadIdx.x) + 56))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 56) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 56) % 61)) < 227)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 56) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 56) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 84))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 84) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 23)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 112))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 51) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 51) % 61)) < 227)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 112) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 51) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 140))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 140) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 18)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 168))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 46) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 46) % 61)) < 227)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 168) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 46) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 196))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 196) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 13)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 224))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 41) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 41) % 61)) < 227)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 224) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 41) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 252))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 252) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 8)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 280))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 36) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 36) % 61)) < 227)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 280) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 36) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 308))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 308) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 3)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 336))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 336) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 31)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 364))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 59) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 59) % 61)) < 227)) ? ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 364) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 59) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 392))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 392) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 26)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 420))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 54) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 54) % 61)) < 227)) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 420) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + ((((((int)threadIdx.x) + 420) % 427) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 54) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 448))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 448) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 21)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 476))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 49) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 49) % 61)) < 227)) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 476) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 49) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 49) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 504))] = ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 504) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 77) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 16)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 532))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 44) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 44) % 61)) < 227)) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 532) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 105) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 44) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 560))] = ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 560) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 133) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 11)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 588))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 39) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 39) % 61)) < 227)) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 588) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 161) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 39) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 616))] = ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 616) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 189) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 6)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 644))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 34) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 34) % 61)) < 227)) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 644) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 217) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 34) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 672))] = ((3 <= ((((int)blockIdx.x) * 56) + (((int)threadIdx.x) + 1))) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 672) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 245) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 1)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 700))] = ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 700) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 273) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 29)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 728))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 57) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 57) % 61)) < 227)) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 728) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 301) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 57) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 756))] = ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 756) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 329) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 24)) - 3))];
  PaddedInput_shared[((((int)threadIdx.x) + 784))] = (((3 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 52) % 61))) && (((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 52) % 61)) < 227)) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 784) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 357) / 61) * 224)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 52) % 61)) - 3))] : 0.000000e+00f);
  PaddedInput_shared[((((int)threadIdx.x) + 812))] = ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 812) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 385) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 19)) - 3))];
  if (((int)threadIdx.x) < 14) {
    PaddedInput_shared[((((int)threadIdx.x) + 840))] = ((((((int)blockIdx.x) * 56) + (((int)threadIdx.x) + 47)) < 227) ? ((float*)placeholder)[((((((((((int)blockIdx.z) * 100352) + (((((int)threadIdx.x) + 840) / 427) * 50176)) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 413) / 61) * 224)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 47)) - 3))] : 0.000000e+00f);
  }
  if (((int)threadIdx.x) < 14) {
    placeholder_shared[(((int)threadIdx.x))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 14) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[((((int)threadIdx.x) * 2))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 1))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 2))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 3))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 4))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 5))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 6))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 61))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 62))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 63))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 64))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 65))];
  PaddedInput_shared_local[(12)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 66))];
  PaddedInput_shared_local[(13)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 67))];
  PaddedInput_shared_local[(14)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 122))];
  PaddedInput_shared_local[(15)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 123))];
  PaddedInput_shared_local[(16)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 124))];
  PaddedInput_shared_local[(17)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 125))];
  PaddedInput_shared_local[(18)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 126))];
  PaddedInput_shared_local[(19)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 127))];
  PaddedInput_shared_local[(20)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 128))];
  PaddedInput_shared_local[(21)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 183))];
  PaddedInput_shared_local[(22)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 184))];
  PaddedInput_shared_local[(23)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 185))];
  PaddedInput_shared_local[(24)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 186))];
  PaddedInput_shared_local[(25)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 187))];
  PaddedInput_shared_local[(26)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 188))];
  PaddedInput_shared_local[(27)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 189))];
  PaddedInput_shared_local[(28)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 244))];
  PaddedInput_shared_local[(29)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 245))];
  PaddedInput_shared_local[(30)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 246))];
  PaddedInput_shared_local[(31)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 247))];
  PaddedInput_shared_local[(32)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 248))];
  PaddedInput_shared_local[(33)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 249))];
  PaddedInput_shared_local[(34)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 250))];
  PaddedInput_shared_local[(35)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 305))];
  PaddedInput_shared_local[(36)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 306))];
  PaddedInput_shared_local[(37)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 307))];
  PaddedInput_shared_local[(38)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 308))];
  PaddedInput_shared_local[(39)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 309))];
  PaddedInput_shared_local[(40)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 310))];
  PaddedInput_shared_local[(41)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 311))];
  PaddedInput_shared_local[(42)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 366))];
  PaddedInput_shared_local[(43)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 367))];
  PaddedInput_shared_local[(44)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 368))];
  PaddedInput_shared_local[(45)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 369))];
  PaddedInput_shared_local[(46)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 370))];
  PaddedInput_shared_local[(47)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 371))];
  PaddedInput_shared_local[(48)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 372))];
  PaddedInput_shared_local[(49)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 427))];
  PaddedInput_shared_local[(50)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 428))];
  PaddedInput_shared_local[(51)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 429))];
  PaddedInput_shared_local[(52)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 430))];
  PaddedInput_shared_local[(53)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 431))];
  PaddedInput_shared_local[(54)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 432))];
  PaddedInput_shared_local[(55)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 433))];
  PaddedInput_shared_local[(56)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 488))];
  PaddedInput_shared_local[(57)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 489))];
  PaddedInput_shared_local[(58)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 490))];
  PaddedInput_shared_local[(59)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 491))];
  PaddedInput_shared_local[(60)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 492))];
  PaddedInput_shared_local[(61)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 493))];
  PaddedInput_shared_local[(62)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 494))];
  PaddedInput_shared_local[(63)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 549))];
  PaddedInput_shared_local[(64)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 550))];
  PaddedInput_shared_local[(65)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 551))];
  PaddedInput_shared_local[(66)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 552))];
  PaddedInput_shared_local[(67)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 553))];
  PaddedInput_shared_local[(68)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 554))];
  PaddedInput_shared_local[(69)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 555))];
  PaddedInput_shared_local[(70)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 610))];
  PaddedInput_shared_local[(71)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 611))];
  PaddedInput_shared_local[(72)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 612))];
  PaddedInput_shared_local[(73)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 613))];
  PaddedInput_shared_local[(74)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 614))];
  PaddedInput_shared_local[(75)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 615))];
  PaddedInput_shared_local[(76)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 616))];
  PaddedInput_shared_local[(77)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 671))];
  PaddedInput_shared_local[(78)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 672))];
  PaddedInput_shared_local[(79)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 673))];
  PaddedInput_shared_local[(80)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 674))];
  PaddedInput_shared_local[(81)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 675))];
  PaddedInput_shared_local[(82)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 676))];
  PaddedInput_shared_local[(83)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 677))];
  PaddedInput_shared_local[(84)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 732))];
  PaddedInput_shared_local[(85)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 733))];
  PaddedInput_shared_local[(86)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 734))];
  PaddedInput_shared_local[(87)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 735))];
  PaddedInput_shared_local[(88)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 736))];
  PaddedInput_shared_local[(89)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 737))];
  PaddedInput_shared_local[(90)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 738))];
  PaddedInput_shared_local[(91)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 793))];
  PaddedInput_shared_local[(92)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 794))];
  PaddedInput_shared_local[(93)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 795))];
  PaddedInput_shared_local[(94)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 796))];
  PaddedInput_shared_local[(95)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 797))];
  PaddedInput_shared_local[(96)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 798))];
  PaddedInput_shared_local[(97)] = PaddedInput_shared[(((((int)threadIdx.x) * 2) + 799))];
  placeholder_shared_local[(0)] = placeholder_shared[(0)];
  placeholder_shared_local[(1)] = placeholder_shared[(1)];
  placeholder_shared_local[(2)] = placeholder_shared[(2)];
  placeholder_shared_local[(3)] = placeholder_shared[(3)];
  placeholder_shared_local[(4)] = placeholder_shared[(4)];
  placeholder_shared_local[(5)] = placeholder_shared[(5)];
  placeholder_shared_local[(6)] = placeholder_shared[(6)];
  placeholder_shared_local[(7)] = placeholder_shared[(7)];
  placeholder_shared_local[(8)] = placeholder_shared[(8)];
  placeholder_shared_local[(9)] = placeholder_shared[(9)];
  placeholder_shared_local[(10)] = placeholder_shared[(10)];
  placeholder_shared_local[(11)] = placeholder_shared[(11)];
  placeholder_shared_local[(12)] = placeholder_shared[(12)];
  placeholder_shared_local[(13)] = placeholder_shared[(13)];
  DepthwiseConv2d[(0)] = 0.000000e+00f;
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(0)] = (DepthwiseConv2d[(0)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(1)] = 0.000000e+00f;
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(12)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(1)] = (DepthwiseConv2d[(1)] + (PaddedInput_shared_local[(13)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(2)] = 0.000000e+00f;
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(14)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(15)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(16)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(17)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(18)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(19)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(2)] = (DepthwiseConv2d[(2)] + (PaddedInput_shared_local[(20)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(3)] = 0.000000e+00f;
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(21)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(22)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(23)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(24)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(25)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(26)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(3)] = (DepthwiseConv2d[(3)] + (PaddedInput_shared_local[(27)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(4)] = 0.000000e+00f;
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(28)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(29)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(30)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(31)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(32)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(33)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(4)] = (DepthwiseConv2d[(4)] + (PaddedInput_shared_local[(34)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(5)] = 0.000000e+00f;
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(35)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(36)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(37)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(38)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(39)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(40)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(5)] = (DepthwiseConv2d[(5)] + (PaddedInput_shared_local[(41)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(6)] = 0.000000e+00f;
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(42)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(43)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(44)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(45)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(46)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(47)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d[(6)] = (DepthwiseConv2d[(6)] + (PaddedInput_shared_local[(48)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d[(7)] = 0.000000e+00f;
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(49)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(50)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(51)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(52)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(53)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(54)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d[(7)] = (DepthwiseConv2d[(7)] + (PaddedInput_shared_local[(55)] * placeholder_shared_local[(13)]));
  DepthwiseConv2d[(8)] = 0.000000e+00f;
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(56)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(57)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(58)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(59)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(60)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(61)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d[(8)] = (DepthwiseConv2d[(8)] + (PaddedInput_shared_local[(62)] * placeholder_shared_local[(13)]));
  DepthwiseConv2d[(9)] = 0.000000e+00f;
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(63)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(64)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(65)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(66)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(67)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(68)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d[(9)] = (DepthwiseConv2d[(9)] + (PaddedInput_shared_local[(69)] * placeholder_shared_local[(13)]));
  DepthwiseConv2d[(10)] = 0.000000e+00f;
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(70)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(71)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(72)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(73)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(74)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(75)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d[(10)] = (DepthwiseConv2d[(10)] + (PaddedInput_shared_local[(76)] * placeholder_shared_local[(13)]));
  DepthwiseConv2d[(11)] = 0.000000e+00f;
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(77)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(78)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(79)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(80)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(81)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(82)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d[(11)] = (DepthwiseConv2d[(11)] + (PaddedInput_shared_local[(83)] * placeholder_shared_local[(13)]));
  DepthwiseConv2d[(12)] = 0.000000e+00f;
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(84)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(85)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(86)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(87)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(88)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(89)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d[(12)] = (DepthwiseConv2d[(12)] + (PaddedInput_shared_local[(90)] * placeholder_shared_local[(13)]));
  DepthwiseConv2d[(13)] = 0.000000e+00f;
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(91)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(92)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(93)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(94)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(95)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(96)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d[(13)] = (DepthwiseConv2d[(13)] + (PaddedInput_shared_local[(97)] * placeholder_shared_local[(13)]));
  ((float*)T_add)[(((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)))] = (DepthwiseConv2d[(0)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 112))] = (DepthwiseConv2d[(1)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 224))] = (DepthwiseConv2d[(2)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 336))] = (DepthwiseConv2d[(3)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 448))] = (DepthwiseConv2d[(4)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 560))] = (DepthwiseConv2d[(5)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 672))] = (DepthwiseConv2d[(6)] + ((float*)placeholder2)[((((int)blockIdx.z) * 2))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25088))] = (DepthwiseConv2d[(7)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25200))] = (DepthwiseConv2d[(8)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25312))] = (DepthwiseConv2d[(9)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25424))] = (DepthwiseConv2d[(10)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25536))] = (DepthwiseConv2d[(11)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25648))] = (DepthwiseConv2d[(12)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]);
  ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25760))] = (DepthwiseConv2d[(13)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 2) + 1))]);
}

extern "C" __global__ void fused_nn_conv2d_add_11_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  float compute[8];
  __shared__ float pad_temp_shared[896];
  __shared__ float placeholder_shared[1024];
  #pragma unroll
  for (int yy_init = 0; yy_init < 2; ++yy_init) {
    compute[(yy_init)] = 0.000000e+00f;
    compute[((yy_init + 2))] = 0.000000e+00f;
    compute[((yy_init + 4))] = 0.000000e+00f;
    compute[((yy_init + 6))] = 0.000000e+00f;
  }
  #pragma unroll
  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[((((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[((((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 64) {
        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 1024) {
          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {
            placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 128)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {
      #pragma unroll
      for (int yy = 0; yy < 2; ++yy) {
        compute[(yy)] = (compute[(yy)] + (pad_temp_shared[((((rc_inner * 56) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 16) + rc_inner))]));
        compute[((yy + 2))] = (compute[((yy + 2))] + (pad_temp_shared[((((rc_inner * 56) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 256))]));
        compute[((yy + 4))] = (compute[((yy + 4))] + (pad_temp_shared[((((rc_inner * 56) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 512))]));
        compute[((yy + 6))] = (compute[((yy + 6))] + (pad_temp_shared[((((rc_inner * 56) + (yy * 28)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 16) + rc_inner) + 768))]));
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    ((float*)T_add)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)))] = (compute[(ax2_inner_inner_inner)] + ((float*)placeholder2)[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]);
    ((float*)T_add)[(((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)) + 12544))] = (compute[((ax2_inner_inner_inner + 2))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]);
    ((float*)T_add)[(((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)) + 25088))] = (compute[((ax2_inner_inner_inner + 4))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]);
    ((float*)T_add)[(((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (ax2_inner_inner_inner * 28)) + ((int)threadIdx.x)) + 37632))] = (compute[((ax2_inner_inner_inner + 6))] + ((float*)placeholder2)[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]);
  }
}

extern "C" __global__ void fused_nn_conv2d_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ DepthwiseConv2d) {
  __shared__ float PaddedInput_shared[700];
  __shared__ float placeholder_shared[700];
  float PaddedInput_shared_local[28];
  float placeholder_shared_local[28];
  float DepthwiseConv2d_local[4];
  PaddedInput_shared[(((int)threadIdx.z))] = ((float*)placeholder)[(((((int)blockIdx.z) * 700) + ((int)threadIdx.z)))];
  PaddedInput_shared[((((int)threadIdx.z) + 25))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 25))];
  PaddedInput_shared[((((int)threadIdx.z) + 50))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 50))];
  PaddedInput_shared[((((int)threadIdx.z) + 75))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 75))];
  PaddedInput_shared[((((int)threadIdx.z) + 100))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 100))];
  PaddedInput_shared[((((int)threadIdx.z) + 125))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 125))];
  PaddedInput_shared[((((int)threadIdx.z) + 150))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 150))];
  PaddedInput_shared[((((int)threadIdx.z) + 175))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 175))];
  PaddedInput_shared[((((int)threadIdx.z) + 200))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 200))];
  PaddedInput_shared[((((int)threadIdx.z) + 225))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 225))];
  PaddedInput_shared[((((int)threadIdx.z) + 250))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 250))];
  PaddedInput_shared[((((int)threadIdx.z) + 275))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 275))];
  PaddedInput_shared[((((int)threadIdx.z) + 300))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 300))];
  PaddedInput_shared[((((int)threadIdx.z) + 325))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 325))];
  PaddedInput_shared[((((int)threadIdx.z) + 350))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 350))];
  PaddedInput_shared[((((int)threadIdx.z) + 375))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 375))];
  PaddedInput_shared[((((int)threadIdx.z) + 400))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 400))];
  PaddedInput_shared[((((int)threadIdx.z) + 425))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 425))];
  PaddedInput_shared[((((int)threadIdx.z) + 450))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 450))];
  PaddedInput_shared[((((int)threadIdx.z) + 475))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 475))];
  PaddedInput_shared[((((int)threadIdx.z) + 500))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 500))];
  PaddedInput_shared[((((int)threadIdx.z) + 525))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 525))];
  PaddedInput_shared[((((int)threadIdx.z) + 550))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 550))];
  PaddedInput_shared[((((int)threadIdx.z) + 575))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 575))];
  PaddedInput_shared[((((int)threadIdx.z) + 600))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 600))];
  PaddedInput_shared[((((int)threadIdx.z) + 625))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 625))];
  PaddedInput_shared[((((int)threadIdx.z) + 650))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 650))];
  PaddedInput_shared[((((int)threadIdx.z) + 675))] = ((float*)placeholder)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 675))];
  placeholder_shared[(((int)threadIdx.z))] = ((float*)placeholder1)[(((((int)blockIdx.z) * 700) + ((int)threadIdx.z)))];
  placeholder_shared[((((int)threadIdx.z) + 25))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 25))];
  placeholder_shared[((((int)threadIdx.z) + 50))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 50))];
  placeholder_shared[((((int)threadIdx.z) + 75))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 75))];
  placeholder_shared[((((int)threadIdx.z) + 100))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 100))];
  placeholder_shared[((((int)threadIdx.z) + 125))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 125))];
  placeholder_shared[((((int)threadIdx.z) + 150))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 150))];
  placeholder_shared[((((int)threadIdx.z) + 175))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 175))];
  placeholder_shared[((((int)threadIdx.z) + 200))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 200))];
  placeholder_shared[((((int)threadIdx.z) + 225))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 225))];
  placeholder_shared[((((int)threadIdx.z) + 250))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 250))];
  placeholder_shared[((((int)threadIdx.z) + 275))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 275))];
  placeholder_shared[((((int)threadIdx.z) + 300))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 300))];
  placeholder_shared[((((int)threadIdx.z) + 325))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 325))];
  placeholder_shared[((((int)threadIdx.z) + 350))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 350))];
  placeholder_shared[((((int)threadIdx.z) + 375))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 375))];
  placeholder_shared[((((int)threadIdx.z) + 400))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 400))];
  placeholder_shared[((((int)threadIdx.z) + 425))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 425))];
  placeholder_shared[((((int)threadIdx.z) + 450))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 450))];
  placeholder_shared[((((int)threadIdx.z) + 475))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 475))];
  placeholder_shared[((((int)threadIdx.z) + 500))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 500))];
  placeholder_shared[((((int)threadIdx.z) + 525))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 525))];
  placeholder_shared[((((int)threadIdx.z) + 550))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 550))];
  placeholder_shared[((((int)threadIdx.z) + 575))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 575))];
  placeholder_shared[((((int)threadIdx.z) + 600))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 600))];
  placeholder_shared[((((int)threadIdx.z) + 625))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 625))];
  placeholder_shared[((((int)threadIdx.z) + 650))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 650))];
  placeholder_shared[((((int)threadIdx.z) + 675))] = ((float*)placeholder1)[((((((int)blockIdx.z) * 700) + ((int)threadIdx.z)) + 675))];
  __syncthreads();
  PaddedInput_shared_local[(0)] = PaddedInput_shared[((((int)threadIdx.z) * 7))];
  PaddedInput_shared_local[(7)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 175))];
  PaddedInput_shared_local[(14)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 350))];
  PaddedInput_shared_local[(21)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 525))];
  PaddedInput_shared_local[(1)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 1))];
  PaddedInput_shared_local[(8)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 176))];
  PaddedInput_shared_local[(15)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 351))];
  PaddedInput_shared_local[(22)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 526))];
  PaddedInput_shared_local[(2)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 2))];
  PaddedInput_shared_local[(9)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 177))];
  PaddedInput_shared_local[(16)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 352))];
  PaddedInput_shared_local[(23)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 527))];
  PaddedInput_shared_local[(3)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 3))];
  PaddedInput_shared_local[(10)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 178))];
  PaddedInput_shared_local[(17)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 353))];
  PaddedInput_shared_local[(24)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 528))];
  PaddedInput_shared_local[(4)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 4))];
  PaddedInput_shared_local[(11)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 179))];
  PaddedInput_shared_local[(18)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 354))];
  PaddedInput_shared_local[(25)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 529))];
  PaddedInput_shared_local[(5)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 5))];
  PaddedInput_shared_local[(12)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 180))];
  PaddedInput_shared_local[(19)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 355))];
  PaddedInput_shared_local[(26)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 530))];
  PaddedInput_shared_local[(6)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 6))];
  PaddedInput_shared_local[(13)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 181))];
  PaddedInput_shared_local[(20)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 356))];
  PaddedInput_shared_local[(27)] = PaddedInput_shared[(((((int)threadIdx.z) * 7) + 531))];
  placeholder_shared_local[(0)] = placeholder_shared[((((int)threadIdx.z) * 7))];
  placeholder_shared_local[(7)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 175))];
  placeholder_shared_local[(14)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 350))];
  placeholder_shared_local[(21)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 525))];
  placeholder_shared_local[(1)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 1))];
  placeholder_shared_local[(8)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 176))];
  placeholder_shared_local[(15)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 351))];
  placeholder_shared_local[(22)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 526))];
  placeholder_shared_local[(2)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 2))];
  placeholder_shared_local[(9)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 177))];
  placeholder_shared_local[(16)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 352))];
  placeholder_shared_local[(23)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 527))];
  placeholder_shared_local[(3)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 3))];
  placeholder_shared_local[(10)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 178))];
  placeholder_shared_local[(17)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 353))];
  placeholder_shared_local[(24)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 528))];
  placeholder_shared_local[(4)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 4))];
  placeholder_shared_local[(11)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 179))];
  placeholder_shared_local[(18)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 354))];
  placeholder_shared_local[(25)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 529))];
  placeholder_shared_local[(5)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 5))];
  placeholder_shared_local[(12)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 180))];
  placeholder_shared_local[(19)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 355))];
  placeholder_shared_local[(26)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 530))];
  placeholder_shared_local[(6)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 6))];
  placeholder_shared_local[(13)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 181))];
  placeholder_shared_local[(20)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 356))];
  placeholder_shared_local[(27)] = placeholder_shared[(((((int)threadIdx.z) * 7) + 531))];
  DepthwiseConv2d_local[(0)] = 0.000000e+00f;
  DepthwiseConv2d_local[(1)] = 0.000000e+00f;
  DepthwiseConv2d_local[(2)] = 0.000000e+00f;
  DepthwiseConv2d_local[(3)] = 0.000000e+00f;
  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));
  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(7)]));
  DepthwiseConv2d_local[(2)] = (DepthwiseConv2d_local[(2)] + (PaddedInput_shared_local[(14)] * placeholder_shared_local[(14)]));
  DepthwiseConv2d_local[(3)] = (DepthwiseConv2d_local[(3)] + (PaddedInput_shared_local[(21)] * placeholder_shared_local[(21)]));
  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));
  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(8)]));
  DepthwiseConv2d_local[(2)] = (DepthwiseConv2d_local[(2)] + (PaddedInput_shared_local[(15)] * placeholder_shared_local[(15)]));
  DepthwiseConv2d_local[(3)] = (DepthwiseConv2d_local[(3)] + (PaddedInput_shared_local[(22)] * placeholder_shared_local[(22)]));
  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));
  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(9)]));
  DepthwiseConv2d_local[(2)] = (DepthwiseConv2d_local[(2)] + (PaddedInput_shared_local[(16)] * placeholder_shared_local[(16)]));
  DepthwiseConv2d_local[(3)] = (DepthwiseConv2d_local[(3)] + (PaddedInput_shared_local[(23)] * placeholder_shared_local[(23)]));
  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(3)]));
  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(10)]));
  DepthwiseConv2d_local[(2)] = (DepthwiseConv2d_local[(2)] + (PaddedInput_shared_local[(17)] * placeholder_shared_local[(17)]));
  DepthwiseConv2d_local[(3)] = (DepthwiseConv2d_local[(3)] + (PaddedInput_shared_local[(24)] * placeholder_shared_local[(24)]));
  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(4)]));
  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(11)]));
  DepthwiseConv2d_local[(2)] = (DepthwiseConv2d_local[(2)] + (PaddedInput_shared_local[(18)] * placeholder_shared_local[(18)]));
  DepthwiseConv2d_local[(3)] = (DepthwiseConv2d_local[(3)] + (PaddedInput_shared_local[(25)] * placeholder_shared_local[(25)]));
  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(5)]));
  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(12)] * placeholder_shared_local[(12)]));
  DepthwiseConv2d_local[(2)] = (DepthwiseConv2d_local[(2)] + (PaddedInput_shared_local[(19)] * placeholder_shared_local[(19)]));
  DepthwiseConv2d_local[(3)] = (DepthwiseConv2d_local[(3)] + (PaddedInput_shared_local[(26)] * placeholder_shared_local[(26)]));
  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(6)]));
  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(13)] * placeholder_shared_local[(13)]));
  DepthwiseConv2d_local[(2)] = (DepthwiseConv2d_local[(2)] + (PaddedInput_shared_local[(20)] * placeholder_shared_local[(20)]));
  DepthwiseConv2d_local[(3)] = (DepthwiseConv2d_local[(3)] + (PaddedInput_shared_local[(27)] * placeholder_shared_local[(27)]));
  ((float*)DepthwiseConv2d)[(((((int)blockIdx.z) * 100) + ((int)threadIdx.z)))] = DepthwiseConv2d_local[(0)];
  ((float*)DepthwiseConv2d)[((((((int)blockIdx.z) * 100) + ((int)threadIdx.z)) + 25))] = DepthwiseConv2d_local[(1)];
  ((float*)DepthwiseConv2d)[((((((int)blockIdx.z) * 100) + ((int)threadIdx.z)) + 50))] = DepthwiseConv2d_local[(2)];
  ((float*)DepthwiseConv2d)[((((((int)blockIdx.z) * 100) + ((int)threadIdx.z)) + 75))] = DepthwiseConv2d_local[(3)];
}
